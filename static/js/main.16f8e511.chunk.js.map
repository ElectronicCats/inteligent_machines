{"version":3,"sources":["contexts/theme-context.js","styles/queries.js","styles/GlobalStyles.js","styles/fonts/gotham_ssv/Gotham-Book.otf","styles/fonts/gotham_ssv/Gotham-Light.otf","styles/fonts/gotham_ssv/Gotham-Medium.otf","styles/fonts/gotham_ssv/Gotham-Thin.otf","styles/fonts/acoumin/Acumin-RPro.otf","styles/fonts/acoumin/Acumin-BdPro.otf","styles/fonts/fontStyles.js","assets/logo_desk.svg","assets/devices/chips.svg","assets/sam/sam-kit.svg","styles/Layout.js","components/UI/Header.js","components/UI/Icons.js","components/Menu/index.js","components/Burger/index.js","components/Navbar/index.js","hooks/useOutSideClick.js","components/UI/Cards.js","components/UI/Content.js","assets/logos/logo-EC.svg","assets/logos/logo-kybernus.svg","assets/logos/logo-edu-arduino.svg","components/Partners/index.js","components/Navbar/FootNav.js","components/AppLayout/index.js","assets/main-bg.svg","components/BlueContainer/index.js","components/GradientContainer/index.js","components/Buttons/styles.js","assets/devices/curso_pcs.svg","consts/courses/CardList.js","assets/courses/intro_ia.svg","assets/courses/etc_resp.svg","assets/courses/tyni_mach.svg","assets/courses/our_kit.svg","assets/courses/platform_edge.svg","assets/courses/dev_code.svg","assets/courses/temp_sens.svg","assets/courses/color_sens.svg","assets/courses/imu_sens.svg","assets/courses/micro_phon.svg","assets/courses/ia_vis.svg","assets/courses/curso_final.svg","components/ClassCard/index.js","components/CourseList/index.js","pages/Courses/index.js","components/Tables/index.js","assets/sam/red-sam.svg","consts/Workshops.js","assets/workers/ec.svg","assets/workers/inventorshouse.svg","assets/workers/garage.png","assets/workers/redpanda.svg","hooks/useFormFields.js","components/TextInput/styles.js","components/TextInput/index.js","components/TextArea/styles.js","components/TextArea/index.js","components/Buttons/DownLoadButton.js","components/Buttons/ActionButton.js","assets/sam/resourse-sam.svg","hooks/useEmail.js","pages/ContactUs/index.js","assets/logo_microchip.svg","assets/sam/sam-stand.svg","components/ExplainCard/index.js","assets/devices/guia-cel.svg","assets/devices/guia-ipod.svg","assets/devices/guia-usb.svg","assets/devices/guía-audifonos.svg","assets/devices/guía-tablet.svg","components/Devices/index.js","assets/devices/obj_trasn.svg","assets/objetivos_cards.svg","assets/objetivos_grafica.svg","assets/sam/objetivos-sam.svg","components/ClassCard/ThanksCard.js","components/Course/Introduction.js","hooks/useToggle.js","components/DropContent/index.js","components/Course/CourseClass.js","components/Course/Resourses.js","components/Course/Practice.js","components/Course/Plan.js","components/Course/index.js","consts/courses/Ai.js","consts/courses/index.js","consts/courses/Etica_resp.js","consts/courses/Ml.js","consts/courses/Kit.js","consts/courses/EdgeImp.js","consts/courses/DevCode.js","consts/courses/SensTemp.js","consts/courses/Rgb.js","consts/courses/SensImu.js","consts/courses/Microphone.js","consts/courses/AiVis.js","consts/courses/FinalProject.js","components/CourseNav/index.js","hooks/useCarrucelCourse.js","assets/thanks/thanks_laptop.svg","assets/thanks/logo_arduino.svg","assets/thanks/logo_hacedores.svg","assets/thanks/logo_ilce.svg","pages/routes.js","pages/CoursesDetails/index.js","pages/About/index.js","pages/Objective/index.js","pages/StartGuide/index.js","pages/Workshops/index.js","pages/Cvmap/index.js","pages/Thanks/index.js","pages/Home/index.js","pages/NotFound/index.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","ThemeProvider","props","useState","theme","setTheme","useEffect","getTheme","localStorage","getItem","setItem","Provider","value","toggleTheme","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","GlobalStyle","createGlobalStyle","CenterDiv","sytled","div","direction","Panel","FontStyles","Acumin_Bold","Acumin_Regualr","Gotham_Light","Gotham_Thin","Gotham_Medium","Gotham_Book","MainLayout","styled","main","WrapperContent","section","WrapperNav","header","WrapperFoot","footer","WrapperFootNav","HeaderContainer","nav","HeaderLogo","img","HeaderLinks","StyledLink","NavLink","activeClassName","IconLink","a","StyledBurger","button","open","StyledMenu","IconFaceBgColor","ImFacebook","IconYoutubeBgColor","ImYoutube","IconGithubBgColor","ImGithub","IconInstagramColor","ImInstagram","IconDownload","HiDownload","Menu","routes","filter","route","path","map","data-link","to","exact","name","Burger","setOpen","onClick","aria-label","Navbar","ref","handler","node","useRef","listener","event","current","contains","target","document","addEventListener","removeEventListener","src","logo","alt","href","style","display","justifyContent","CardGrids","cardSize","align","justify","SimpleCard","Card","WorkshopCard","Container","BackgroundContainer","article","ContainerTitle","h2","colorBg","color","ContalinerList","ul","ContainerOrderList","ol","ContainerP","p","ToogleContent","ContaineFexDiv","PartnerLogo","Partners","fontWeight","textAlign","rel","EC_logo","KY_logo","AR_logo","StyledFooterLink","FootNav","alignItems","AppLayout","children","BlueBackground","bluback","BlueContainer","GradientBackground","GradientBackgroundCircle","GradientContainer","GradientContainerCircle","GradientBackgroundRound","GradientContainerRound","TopBackground","TopContainer","CrossBarBackground","CrossBarContainer","HalfBackground","HalfContainer","RoundLink","bgColor","DownloadBtn","RoundButton","RoundSpan","span","CURSES_CARDS","id","couseName","imagePath","ClassCard","title","imgsrc","CourseList","coursesCards","card","defaultProps","StylesTable","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","WORKSHOPS","description","page","useFormTextField","initialValue","validate","error","setError","setValue","onChange","useCallback","e","resetValues","InpuText","input","attrs","colorFocus","LabelText","label","SpanError","InputContainer","TextInput","type","logical","placeholder","errorMessage","htmlFor","TextareaInput","textarea","TextArea","DownLoadButton","pathToFile","downloadName","download","className","ActionButton","onAction","buttonType","TEMPLATE_ID","process","SERVICE_ID","requiredValidation","values","emailValidation","test","ExplainCard","bullets","descriptions","margin","aling","alignSelf","text","StyledDevice","imgWidth","imgHeight","ImagesGrids","guiaCel","guiaIpod","guiaUsb","guiaAudi","guiaTab","FlexImages","gridTemplateColumns","ThanksCard","addCard","maxWidth","Introduction","introClass","vimeoSrc","item","frameBorder","allow","allowFullScreen","width","minWidth","height","DropContent","v","useToggle","toggle","cursor","CourseClass","downloadLabel","pathToDownloadFile","downloadFileName","content","videoClass","Resourses","mainLink","links","flexDirection","samResourse","Practice","precticeName","time","meterials","objective","steps","Plan","tableConent","useMemo","Header","accessor","activitie","material","classTime","Math","floor","random","TABS","StyledTab","Tab","StyledTabsList","TabList","Course","introContent","planContent","contentClass","practiceClass","resoursesClass","selectedTab","setSelectedTab","selectedItem","tab","introduccion_ia","etica_responsabilidad","tyni_machine_learning","nuestro_kit","platforma_edge","programando_codigo","sensor_temperatura","sensor_color","sensor_imu","microfono","vision_artificial","curso_final","IconStiledNav","Link","CourseNav","currentTitle","navNext","navPrev","param","getItemById","array","find","elment","getIndexById","findIndex","getIndexBy","useCarrucelCourseNav","classId","setTitle","nexCoursePath","setNextCoursePath","prevCoursePath","setprevCoursePath","idCurrent","len","length","currentIndex","getNextCourseId","getPrevCourseId","component","match","params","COURSES","logo_microchip","obj_trasn","objetivos_cards","objetivos_grafica","objetivos_sam","samStand","lineHeight","marginInline","devices","red_sam","worker","session","learn","visits","upper","themes","materia","emailField","nameField","lastNameField","celField","messageField","status","message","messageStatus","setMessageStatus","messageLoadin","setLoading","emailjs","init","sendEmail","callback","send","then","response","finally","useEmail","ResetData","preparData","email","lastname","tel","padding","onSubmit","preventDefault","required","disabled","zIndex","action","method","border","position","left","bottom","thanks_laptop","gap","logo_arduino","logo_hacedores","logo_ilce","logo_kybernus","chips","start","samKit","App","useContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","ReactDOM","StrictMode","getElementById"],"mappings":"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W,CAAC,qCAAsC,UAAW,YAC7DC,UAAW,oEACXC,MACE,qlCAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,4GACFC,aAAc,sBACdd,MAAO,iBAETuE,MAAO,CACL,CACE1D,WACE,mEACFC,aAAc,GACdd,MAAO,2BAET,CACEa,WACE,0GACFC,aAAc,GACdd,MAAO,uDAET,CACEa,WACE,oIACFC,aAAc,GACdd,MAAO,oCAET,CACEa,WACE,gEACFC,aAAc,GACdd,MAAO,2BCjIb2G,sBCfwB,CACxB/O,KAAM,+BACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,4wBACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,gNAEJ,CACE7B,MAAO,2BACP6B,YACE,6PACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,sIAIRmH,YAAa,CACX,CACEnT,MAAO,uBACP+R,UAAW,gEACXO,UAAW,aACXC,SAAU,wCACVC,UAAW,UAEb,CACExS,MAAO,6BACP+R,UACE,mGACFO,UAAW,aACXC,SAAU,wCACVC,UAAW,UAEb,CACExS,MAAO,uCACP+R,UACE,0EACFO,UACE,gIACFC,SAAU,wCACVC,UAAW,UAGb,CACExS,MAAO,+CACP+R,UACE,6KACFO,UACE,qPACFC,SAAU,8DACVC,UAAW,UAEb,CACExS,MAAO,gBACP+R,UAAW,yDACXO,UACE,0IACFC,SAAU,uCACVC,UAAW,UAGb,CACExS,MAAO,wBACP+R,UACE,8GACFO,UACE,sHACFC,SAAU,0BACVC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,+HACFE,QAAS,CACP,CACEC,WAAY,2CACZlH,MAAO,oDACP6B,YACE,yKAIRqH,cAAe,CACbzB,aAAc,+BACdC,KAAM,aACNC,UAAW,CAAC,qCAAsC,UAAW,YAC7DC,UACE,iHACFC,MACE,kGAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,4GACFC,aAAc,sBACdd,MAAO,iBAETuE,MAAO,CACL,CACE1D,WACE,qEACFC,aAAc,GACdd,MAAO,iDAET,CACEa,WAAY,qCACZC,aAAc,GACdd,MAAO,8CAET,CACEa,WACE,qHACFC,aAAc,GACdd,MAAO,sCAET,CACEa,WACE,sGACFC,aAAc,GACdd,MAAO,mBAET,CACEa,WACE,uEACFC,aAAc,GACdd,MACE,oFD9HR4G,sBEhB8B,CAC9BhP,KAAM,mBACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,yWACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,oSAEJ,CACE7B,MAAO,2BACP6B,YACE,uPACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,8HAIRmH,YAAa,CACX,CACEnT,MAAO,kCACP+R,UAAW,0CACXO,UAAW,aACXC,SAAU,wCACVC,UAAW,UAEb,CACExS,MAAO,iCACP+R,UAAW,4DACXO,UAAW,aACXC,SAAU,wCACVC,UAAW,UAEb,CACExS,MAAO,mCACP+R,UACE,sEACFO,UAAW,aACXC,SAAU,wCACVC,UAAW,UAGb,CACExS,MAAO,wBACP+R,UACE,iHACFO,UAAW,aACXC,SAAU,8DACVC,UAAW,UAEb,CACExS,MACE,gFACF+R,UACE,4FACFO,UACE,kJACFC,SAAU,uCACVC,UAAW,UAEb,CACExS,MAAO,uBACP+R,UACE,qFACFO,UACE,sLACFC,SAAU,GACVC,UAAW,UAEb,CACExS,MAAO,iBACP+R,UACE,kEACFO,UAAW,aACXC,SAAU,uCACVC,UAAW,UAEb,CACExS,MAAO,qDACP+R,UACE,mFACFO,UAAW,aACXC,SAAU,uCACVC,UAAW,UAEb,CACExS,MAAO,8BACP+R,UACE,2GACFO,UAAW,aACXC,SAAU,uCACVC,UAAW,UAEb,CACExS,MAAO,mBACP+R,UACE,mGACFO,UACE,gHACFC,SAAU,uCACVC,UAAW,UAEb,CACExS,MAAO,kBACP+R,UAAW,oDACXO,UACE,mFACFE,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,oIACFE,QAAS,CACP,CACEjH,MAAO,mBACP6B,YACE,wFACFqF,WAAY,4CAEd,CACElH,MAAO,wBACP6B,YACE,+FACFqF,WAAY,4CAEd,CACElH,MAAO,uBACP6B,YACE,sMACFqF,WAAY,4CAEd,CACElH,MAAO,aACP6B,YACE,8IACFqF,WAAY,8CAIlBgC,cAAe,CACbzB,aAAc,+BACdC,KAAM,aACNC,UAAW,CAAC,qCAAsC,UAAW,YAC7DC,UAAW,oEACXC,MACE,kGAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,4GACFC,aAAc,sBACdd,MAAO,iBAETuE,MAAO,CACL,CACE1D,WACE,mEACFC,aAAc,GACdd,MAAO,yDAET,CACEa,WAAY,uDACZC,aAAc,GACdd,MAAO,oBAET,CACEa,WAAY,0CACZC,aAAc,GACdd,MAAO,4BAET,CACEa,WAAY,0BACZC,aAAc,GACdd,MAAO,yBAET,CACEa,WAAY,6CACZC,aAAc,GACdd,MAAO,gCFhLb6G,YGjBwB,CACxBjP,KAAM,cACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,qPACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,oJAEJ,CACE7B,MAAO,2BACP6B,YACE,6OACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,kFAIRmH,YAAa,CACX,CACEnT,MAAO,oBACP+R,UACE,+EACFO,UACE,4GACFC,SAAU,oCACVC,UAAW,UAEb,CACExS,MAAO,eACP+R,UAAW,oDACXO,UACE,oIACFC,SAAU,+BACVC,UAAW,UAEb,CACExS,MAAO,wDACP+R,UACE,+EACFO,UACE,6HACFC,SAAU,+DACVC,UAAW,UAEb,CACExS,MAAO,oBACP+R,UACE,oEACFO,UACE,2HACFC,SAAU,+DACVC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,6GACFE,QAAS,CACP,CACEC,WAAY,2CACZlH,MAAO,0CACP6B,YACE,qIAEJ,CACEqF,WAAY,2CACZlH,MACE,sEACF6B,YACE,iHAEJ,CACEqF,WAAY,2CACZlH,MAAO,oBACP6B,YACE,4FAIRqH,cAAe,CACbzB,aAAc,+BACdC,KAAM,aACNC,UAAW,CACT,oCACA,qCACA,UACA,YAEFC,UAAW,GACXC,MAAO,IAETsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,4GACFC,aAAc,sBACdd,MAAO,iBAETuE,MAAO,CACL,CACE1D,WAAY,0BACZC,aAAc,GACdd,MAAO,6BAET,CACEa,WAAY,yDACZC,aAAc,GACdd,MAAO,6BAET,CACEa,WAAY,iDACZC,aAAc,GACdd,MAAO,iDAET,CACEa,WACE,sFACFC,aAAc,GACdd,MAAO,kDHlHb8G,eIlByB,CACzBlP,KAAM,eACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,2MACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,iNAEJ,CACE7B,MAAO,2BACP6B,YACE,kJACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,4IAIRmH,YAAa,CACX,CACEnT,MAAO,eACP+R,UAAW,+DACXO,UACE,mIACFC,SAAU,qCACVC,UAAW,UAEb,CACExS,MAAO,uBACP+R,UACE,8EACFO,UACE,qFACFC,SAAU,8DACVC,UAAW,UAEb,CACExS,MAAO,4BACP+R,UACE,6EACFO,UACE,6HACFC,SAAU,+DACVC,UAAW,UAEb,CACExS,MAAO,4BACP+R,UACE,iIACFO,UACE,8KACFC,SACE,yEACFC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,8GACFE,QAAS,CACP,CACEjH,MAAO,eACP6B,YACE,gFAEJ,CACE7B,MAAO,uBACP6B,YACE,2JAEJ,CACE7B,MAAO,4BACP6B,YACE,uJAEJ,CACE7B,MAAO,4BACP6B,YACE,sJAIRqH,cAAe,CACbzB,aAAc,+BACdC,KAAM,aACNC,UAAW,CACT,yBACA,cACA,qCACA,UACA,YAEFC,UAAW,oDACXC,MACE,gIAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,4GACFC,aAAc,sBACdd,MAAO,iBAETuE,MAAO,CACL,CACE1D,WAAY,+BACZC,aAAc,GACdd,MAAO,kCAET,CACEa,WAAY,8CACZC,aAAc,GACdd,MAAO,+BAET,CACEa,WAAY,oCACZC,aAAc,GACdd,MAAO,6CJ/Gb+G,mBKnBqB,CACrBnP,KAAM,gCACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,oMACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,+HAEJ,CACE7B,MAAO,2BACP6B,YACE,8EACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,sEAIRmH,YAAa,CACX,CACEnT,MAAO,sBACP+R,UACE,wJACFO,UACE,mJACFC,SACE,kHACFC,UAAW,UAEb,CACExS,MAAO,oDACP+R,UACE,2FACFO,UAAU,yXAGVE,UAAW,UAEb,CACExS,MAAO,iDACP+R,UACE,8JACFO,UACE,2MACFC,SAAU,kEACVC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,4HACFE,QAAS,CACP,CACEjB,SAAU,2CACVhG,MAAO,8BACP6B,YACE,+GAEJ,CACEmE,SAAU,2CACVhG,MAAO,oDACP6B,YACE,sLAEJ,CACEmE,SAAU,2CACVhG,MAAO,iDACP6B,YACE,gIAIRqH,cAAe,CACbzB,aAAc,GACdC,KAAM,GACNC,UAAW,CAAC,IACZC,UAAW,GACXC,MAAO,IAETsB,eAAgB,CACd/B,SAAU,CACRzD,WAAY,0BACZC,aAAc,GACdd,MAAO,6BAETuE,MAAO,CACL,CACE1D,WACE,6EACFC,aAAc,GACdd,MAAO,mBAET,CACEa,WAAY,8CACZC,aAAc,GACdd,MAAO,kDLxFbgH,mBMpBgC,CAChCpP,KAAM,wBACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,+OACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,yNAEJ,CACE7B,MAAO,2BACP6B,YACE,+HACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,sGAIRmH,YAAa,CACX,CACEnT,MAAO,oCACP+R,UACE,wHACFO,UACE,gHACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,4CACP+R,UACE,qHACFO,UACE,qJACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,qBACP+R,UACE,yEACFO,UACE,+HACFC,SACE,2EACFC,UAAW,UAEb,CACExS,MAAO,cACP+R,UAAW,yCACXO,UACE,gGACFC,SACE,2EACFC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBACE,oHACFE,QAAS,CACP,CACEjH,MAAO,oCACP6B,YACE,gGAEJ,CACE7B,MAAO,4CACP6B,YACE,4HAEJ,CACE7B,MAAO,qBACP6B,YACE,kJAIRqH,cAAe,CACbzB,aAAc,+BACdC,KAAM,aACNC,UAAW,CACT,qCACA,4BACA,wBAEFC,UACE,+FACFC,MACE,kGAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,sFACFC,aAAc,GACdd,MAAO,2BAETuE,MAAO,CACL,CACE1D,WACE,6EACFC,aAAc,GACdd,MAAO,8CAET,CACEa,WAAY,8CACZC,aAAc,GACdd,MAAO,8CAET,CACEa,WAAY,uDACZC,aAAc,GACdd,MAAO,qDNzGbiH,aOrBwB,CACxBrP,KAAM,aACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,gPACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,8MAEJ,CACE7B,MAAO,2BACP6B,YACE,+HACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,oHAIRmH,YAAa,CACX,CACEnT,MAAO,yBACP+R,UACE,2GACFO,UACE,gHACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,4CACP+R,UACE,qHACFO,UACE,6IACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,qBACP+R,UACE,yEACFO,UACE,+HACFC,SACE,2EACFC,UAAW,UAEb,CACExS,MAAO,cACP+R,UAAW,yCACXO,UACE,gGACFC,SACE,2EACFC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBAAoB,GACpBE,QAAS,CACP,CACEjH,MAAO,yBACP6B,YACE,qFAEJ,CACE7B,MAAO,4CACP6B,YACE,4HAEJ,CACE7B,MAAO,qBACP6B,YACE,kJAIRqH,cAAe,CACbzB,aAAc,GACdC,KAAM,GACNC,UAAW,CAAC,IACZC,UAAW,GACXC,MAAO,IAETsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,6EACFC,aAAc,GACdd,MAAO,uBAETuE,MAAO,CACL,CACE1D,WAAY,8CACZC,aAAc,GACdd,MAAO,iDPtFbkH,WQtBwB,CACxBtP,KAAM,aACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,4QACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,8MAEJ,CACE7B,MAAO,2BACP6B,YACE,+HACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,oHAIRmH,YAAa,CACX,CACEnT,MAAO,yBACP+R,UACE,2GACFO,UACE,gHACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,4CACP+R,UACE,qHACFO,UACE,kJACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,qBACP+R,UACE,yEACFO,UACE,+HACFC,SACE,2EACFC,UAAW,UAEb,CACExS,MAAO,cACP+R,UAAW,yCACXO,UACE,gGACFC,SACE,2EACFC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,wBAClBF,cAAe,gDACfC,mBAAoB,GACpBE,QAAS,CACP,CACEjH,MAAO,yBACP6B,YACE,qFAEJ,CACE7B,MAAO,4CACP6B,YACE,4HAEJ,CACE7B,MAAO,qBACP6B,YACE,kJAIRqH,cAAe,CACbzB,aAAc,GACdC,KAAM,GACNC,UAAW,CAAC,IACZC,UAAW,GACXC,MAAO,IAETsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,6EACFC,aAAc,GACdd,MAAO,uBAETuE,MAAO,CACL,CACE1D,WAAY,8CACZC,aAAc,GACdd,MAAO,iDRrFbmH,USvBwB,CACxBvP,KAAM,eACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,4NACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,mPAEJ,CACE7B,MAAO,2BACP6B,YACE,+HACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,mHAIRmH,YAAa,CACX,CACEnT,MAAO,2BACP+R,UACE,6GACFO,UACE,gHACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,4CACP+R,UACE,qHACFO,UACE,iJACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,qBACP+R,UACE,yEACFO,UACE,+HACFC,SACE,2EACFC,UAAW,UAEb,CACExS,MAAO,cACP+R,UAAW,yCACXO,UACE,gGACFC,SACE,2EACFC,UAAW,WAGfY,aAAc,CACZjC,iBAAkB,yBAClBF,cAAe,gDACfC,mBACE,6GACFE,QAAS,CACP,CACEjH,MAAO,2BACP6B,YACE,qFAEJ,CACE7B,MAAO,4CACP6B,YACE,4HAEJ,CACE7B,MAAO,qBACP6B,YACE,kJAIRqH,cAAe,CACbzB,aAAc,gCACdC,KAAM,aACNC,UAAW,CACT,sCACA,4BACA,gBAEFC,UACE,iHACFC,MACE,mGAEJsB,eAAgB,CACd/B,SAAU,CACRzD,WACE,uFACFC,aAAc,GACdd,MAAO,4BAETuE,MAAO,CACL,CACE1D,WACE,6EACFC,aAAc,GACdd,MAAO,uBAET,CACEa,WAAY,8CACZC,aAAc,GACdd,MAAO,iDTjGboH,kBUxB8B,CAC9BxP,KAAM,uBACNqO,aAAc,CACZ/C,SAAU,2CACVD,WAAY,CACV,CACE/F,MAAO,WACP6B,YACE,oSACF6C,QAAS,IAEX,CACE1E,MAAO,uBACP6B,YACE,gQAEJ,CACE7B,MAAO,2BACP6B,YACE,gHACF6C,QAAS,IAEX,CACE1E,MAAO,0BACP6B,YACE,uIAIRmH,YAAa,CACX,CACEnT,MAAO,kDACP+R,UACE,iJACFO,UACE,yNACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,0CACP+R,UACE,8HACFO,UACE,uNACFC,SAAU,kDACVC,UAAW,UAEb,CACExS,MAAO,oCACP+R,UACE,mEACFO,UACE,+IACFC,SACE,2EACFC,UAA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OAAQ,4BACRC,SAAU,UAEZ,CACED,OAAQ,wBACRC,SAAU,cAGd,IAEIzH,EAAOjL,IAAMwS,SACjB,iBAAM,CACJ,CACE8E,QAAS,kBACTlF,UACE,+LACFmF,MACE,qLACFC,OACE,0LACFC,MACE,2IACFC,OAAQ,0CACRC,QAAS,mDAEX,CACEL,QAAS,iDACTlF,UACE,kSACFmF,MACE,2KACFC,OACE,wKACFC,MACE,oFACFC,OAAQ,oBACRC,QACE,wEAEJ,CACEL,QAAS,mBACTlF,UACE,yJACFmF,MACE,oEACFC,OACE,wFACFC,MACE,2GACFC,OACE,0IACFC,QAAS,0DAEX,CACEL,QAAS,cACTlF,UACE,iFACFmF,MACE,oKACFC,OACE,oMACFC,MACE,uEACFC,OAAQ,+CACRC,QAAS,yDAEX,CACEL,QAAS,eACTlF,UACE,4EACFmF,MACE,sFACFC,OACE,sGACFC,MACE,0IACFC,OACE,0PACFC,QACE,gGAEJ,CACEL,QAAS,gCACTlF,UACE,mGACFmF,MACE,wGACFC,OACE,mGACFC,MACE,iKACFC,OACE,kHACFC,QACE,2EAEJ,CACEL,QAAS,uDACTlF,UACE,0GACFmF,MACE,+HACFC,OACE,kFACFC,MACE,2EACFC,OAAQ,yBACRC,QACE,kIAEJ,CACEL,QAAS,yCACTlF,UACE,8GACFmF,MACE,+HACFC,OACE,kFACFC,MACE,2EACFC,OAAQ,yBACRC,QACE,kIAEJ,CACEL,QAAS,aACTlF,UACE,0IACFmF,MACE,+HACFC,OACE,kFACFC,MACE,2FACFC,OAAQ,wBACRC,QACE,kIAEJ,CACEL,QAAS,eACTlF,UACE,0FACFmF,MACE,+HACFC,OACE,kFACFC,MAAO,qCACPC,OAAQ,yBACRC,QACE,kIAEJ,CACEL,QAAS,uBACTlF,UACE,gGACFmF,MACE,8HACFC,OACE,iFACFC,MAAO,yCACPC,OAAQ,yBACRC,QACE,wJAEJ,CACEL,QAAS,eACTlF,UAAW,2DACXmF,MACE,8HACFC,OACE,kFACFC,MACE,+GACFC,OAAQ,IAEV,CACEJ,QAAS,iBACTlF,UACE,yHACFmF,MACE,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","file":"static/js/main.16f8e511.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ThemeContext = React.createContext();\n\nexport const ThemeProvider = (props) => {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme('dark' === theme ? 'light' : 'dark');\n  };\n  useEffect(() => {\n    const getTheme = localStorage.getItem('site_theme');\n    getTheme === 'dark' ? setTheme('dark') : setTheme('light');\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('page_theme', theme);\n  }, [theme]);\n\n  return <ThemeContext.Provider value={{ theme, toggleTheme }} {...props} />;\n};\n\nexport const useTheme = () => React.useContext(ThemeContext);\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n","import sytled, { createGlobalStyle } from 'styled-components';\nimport { device } from './queries';\nexport const GlobalStyle = createGlobalStyle`\n:root {\n    --main-bg-color: ${(props) =>\n      props.theme === 'dark' ? '#1e1f20' : '#ffffff'};\n    --main-fnt-color: ${(props) =>\n      props.theme === 'dark' ? '#ffffff' : 'var(--color-dark-blue)'};\n    --color-dark-blue: #22244f;\n    --color-blue: #0071b5;\n    --color-darkgray: #181818;\n    --color-gray: #252627;\n    --color-purple: #714d9a;\n    --color-pink: #e72479;\n    --color-orange: #f9b03c;\n    --color-green: #00FF95;\n    --highligth-darkblue: #0071b5;\n    --highligth-blue: 'var(--color-green)';\n    --highligth: ${(props) =>\n      props.theme === 'dark'\n        ? 'var(--highligth-blue)'\n        : 'var(--highligth-darkblue)'};\n    --shadow: 0 4px 8px var(--highligth);\n    --default-font: 'Acumin';\n    --headers-font: 'Gotham';\n    --nav-bar-width: 100px;\n    --font-size: 12px;\n    --gradient: 90deg, #0071b5 0%, #00FF95 100%;\n    --gradient-dark: 90deg, #0071b5 0%, #22244f 100%;\n    @media screen and ${device.laptop} {\n    --font-size: 18px;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  ::-webkit-scrollbar-thumb{\n    background:#888;\n  }\n  ::-webkit-scrollbar-thumb:hover{\n    background: #555;\n  }\n\n  html {\n        box-sizing: border-box;\n        color: var(--black);\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n\n      }\n      *, *::before, *::after {\n        box-sizing: inherit;\n      }\n      body,\n      div,\n      header,\n      section,\n      article,\n      aside,\n      nav,\n      ul,\n      ol,\n      li,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      p {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        overflow-wrap: break-word;\n      }\n      body,\n      div,\n      header,\n      section,\n      article,\n      aside,\n      nav,\n      ul,\n      ol,\n      li,\n      p {\n        font-family: var(--default-font), sans-serif;\n        font-size: var(--font-size);\n      }\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-family: var(--headers-font), sans-serif;\n      }\n      ul {\n        list-style: none;\n      }\n      body{\n        background: var(--main-bg-color);\n        color: var(--main-fnt-color);\n      }\n      button {\n        background: transparent;\n        border: 0;\n        outline: 0;\n        cursor: pointer;\n      }\n      a {\n        text-decoration: none;\n      }\n`;\n\nexport const CenterDiv = sytled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: ${(props) => (props.direction ? props.direction : 'column')};\n  @media ${device.mobileL},${device.mobileM},${device.mobileS} {\n    flex-direction: column;\n  }\n  `;\nexport const Panel = sytled.div`\n  background-color: var(--main-bg-color);\n  border-radius: 15px;\n  box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%);\n`;\nexport const CardDiv = sytled.div`\n  box-shadow: var(--shadow);\n  border-radius: 8px;\n  padding: 30px;\n`;\n","export default __webpack_public_path__ + \"static/media/Gotham-Book.b6e803be.otf\";","export default __webpack_public_path__ + \"static/media/Gotham-Light.df38f0bf.otf\";","export default __webpack_public_path__ + \"static/media/Gotham-Medium.64243e21.otf\";","export default __webpack_public_path__ + \"static/media/Gotham-Thin.65551b0f.otf\";","export default __webpack_public_path__ + \"static/media/Acumin-RPro.0ff8c5d6.otf\";","export default __webpack_public_path__ + \"static/media/Acumin-BdPro.9fbc064b.otf\";","import { createGlobalStyle } from 'styled-components';\n\nimport Gotham_Book from './gotham_ssv/Gotham-Book.otf';\nimport Gotham_Light from './gotham_ssv/Gotham-Light.otf';\nimport Gotham_Medium from './gotham_ssv/Gotham-Medium.otf';\nimport Gotham_Thin from './gotham_ssv/Gotham-Thin.otf';\nimport Acumin_Regualr from './acoumin/Acumin-RPro.otf';\nimport Acumin_Bold from './acoumin/Acumin-BdPro.otf';\n\nexport const FontStyles = createGlobalStyle`\n@font-face {\n    font-family: Acumin;\n    src: url(${Acumin_Bold});\n    font-weight: bold;\n}\n@font-face {\n    font-family: Acumin;\n    src: url(${Acumin_Regualr});\n    font-weight: normal;\n}\n@font-face {\n    font-family: Acumin;\n    src: url(${Acumin_Regualr});\n}\n@font-face {\n    font-family: Gotham;\n    src: url(${Gotham_Light});\n    font-weight: 200;\n}\n@font-face {\n    font-family: Gotham;\n    src: url(${Gotham_Thin});\n    font-weight: 100;\n}\n@font-face {\n    font-family: Gotham;\n    src: url(${Gotham_Medium});\n    font-weight: 300;\n}\n@font-face {\n    font-family: Gotham;\n    src: url(${Gotham_Book});\n    font-weight: normal;\n}\n@font-face {\n    font-family: Gotham;\n    src: url(${Gotham_Book});\n}\n`;\n","export default __webpack_public_path__ + \"static/media/logo_desk.773b3c63.svg\";","export default __webpack_public_path__ + \"static/media/chips.fd458d9f.svg\";","export default __webpack_public_path__ + \"static/media/sam-kit.9720c916.svg\";","import styled from 'styled-components';\n\nexport const MainLayout = styled.main`\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n  background-color: var(--main-bg-color);\n  color: var(--main-fnt-color);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: var(--nav-bar-width) 1fr 100px 157px;\n  grid-template-areas:\n    'nav'\n    'main'\n    'footnav'\n    'footer';\n`;\n\nexport const WrapperContent = styled.section`\n  grid-area: main;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n`;\nexport const WrapperNav = styled.header`\n  grid-area: nav;\n`;\nexport const WrapperFoot = styled.footer`\n  grid-area: footer;\n`;\nexport const WrapperFootNav = styled.section`\n  overflow: scroll;\n  grid-area: footnav;\n  display: flex;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { device } from '../../styles/queries';\n\nexport const HeaderContainer = styled.nav`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 100px;\n  grid-template-areas: 'logo links';\n`;\n\nexport const HeaderLogo = styled.img`\n  grid-area: logo;\n  align-self: center;\n  justify-self: center;\n\n  height: 100px;\n  width: 120px;\n  margin: 0 10px;\n`;\n\nexport const HeaderLinks = styled.div`\n  @media ${device.mobileS} {\n    display: none;\n  }\n  @media ${device.laptop} {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n  grid-area: links;\n  align-self: center;\n  justify-self: center;\n\n  a[data-link='nav-link']::after {\n    content: ' ';\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    margin: 0 10px;\n    font-size: 6rem;\n    background-color: var(--highligth);\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  &.${({ activeClassName }) => activeClassName} {\n    background: linear-gradient(var(--gradient));\n    color: var(--main-bg-color);\n  }\n  height: 100%;\n  padding: 10px 5px;\n  color: var(--main-fnt-color);\n  font-weight: bold;\n`;\nexport const IconLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  width: 40px;\n  border-radius: 50px;\n  margin: 5px;\n  font-size: var(--font-size);\n  background: var(--highligth);\n`;\n\nexport const StyledBurger = styled.button`\n  @media ${device.mobileS} {\n    display: auto;\n  }\n  @media ${device.laptop} {\n    display: none;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-self: center;\n  width: 2rem;\n  height: 2rem;\n  margin: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: var(--highligth);\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? '0' : '1')};\n      transform: ${({ open }) => (open ? 'translateX(20px)' : 'translateX(0)')};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n`;\n\nexport const StyledMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: var(--main-bg-color);\n  transform: ${({ open }) => (open ? 'translateY(100vh)' : 'translateY(0)')};\n  transition: transform 0.3s ease-in-out;\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: -100vh;\n  left: 0;\n`;\n","import styled from 'styled-components';\nimport { ImFacebook, ImYoutube, ImGithub, ImInstagram } from 'react-icons/im';\nimport { HiDownload } from 'react-icons/hi';\n\nexport const IconFaceBgColor = styled(ImFacebook)`\n  color: var(--main-bg-color);\n`;\nexport const IconYoutubeBgColor = styled(ImYoutube)`\n  color: var(--main-bg-color);\n`;\nexport const IconGithubBgColor = styled(ImGithub)`\n  color: var(--main-bg-color);\n`;\n\nexport const IconInstagramColor = styled(ImInstagram)`\n  color: var(--main-bg-color);\n`;\n\nexport const IconDownload = styled(HiDownload)`\n  color: white;\n`;\n","import React from 'react';\nimport { StyledMenu } from '../UI/Header';\nimport { bool } from 'prop-types';\nimport { routes } from '../../pages/routes';\nimport { StyledLink } from '../UI/Header';\nexport const Menu = ({ open }) => {\n  return (\n    <StyledMenu open={open}>\n      {routes\n        // ignoring the default path & home\n        .filter(\n          (route) =>\n            route.path !== '/' && route.path !== '*' && route.path !== '/demo'\n        )\n        .map((route) => (\n          <StyledLink\n            key={route.path}\n            data-link='nav-link'\n            to={route.path}\n            exact\n            activeClassName='current'\n          >\n            {route.name}\n          </StyledLink>\n        ))}\n    </StyledMenu>\n  );\n};\nMenu.propTypes = {\n  open: bool.isRequired,\n};\n","import React from 'react';\nimport { StyledBurger } from '../UI/Header';\nimport { bool, func } from 'prop-types';\n\nexport const Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger\n      open={open}\n      onClick={() => setOpen(!open)}\n      aria-label='menu_button'\n    >\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\nBurger.propTypes = {\n  open: bool.isRequired,\n  setOpen: func.isRequired,\n};\n","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../assets/logo_desk.svg';\nimport { routes } from '../../pages/routes';\nimport {\n  HeaderContainer,\n  HeaderLogo,\n  HeaderLinks,\n  StyledLink,\n  IconLink,\n} from '../UI/Header';\nimport { IconFaceBgColor, IconYoutubeBgColor } from '../UI/Icons';\nimport { useOnClickOutside } from '../../hooks/useOutSideClick';\nimport { Menu } from '../Menu';\nimport { Burger } from '../Burger';\n\nexport const Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const node = useRef();\n  useOnClickOutside(node, () => setOpen(false));\n  return (\n    <HeaderContainer>\n      <Link to='/'>\n        <HeaderLogo src={logo} alt='Logo' />\n      </Link>\n      <HeaderLinks>\n        {routes\n          // ignoring the default path & home\n          .filter(\n            (route) =>\n              route.path === '/curso' ||\n              route.path === '/talleristas' ||\n              route.path === '/mapa-curicular'\n          )\n          .map((route) => (\n            <StyledLink\n              data-link='nav-link'\n              key={route.path}\n              to={route.path}\n              exact\n              activeClassName='current'\n            >\n              {route.name}\n            </StyledLink>\n          ))}\n        <IconLink\n          href='https://www.facebook.com/electroniccats'\n          target='_blank'\n        >\n          <IconFaceBgColor />\n        </IconLink>\n        <IconLink\n          href='https://www.youtube.com/channel/UCA9pODMFvrLEAB9vYWiLebg'\n          target='_blank'\n        >\n          <IconYoutubeBgColor />\n        </IconLink>\n      </HeaderLinks>\n      <div ref={node} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Menu open={open} setOpen={setOpen} />\n        <Burger open={open} setOpen={setOpen} />\n      </div>\n    </HeaderContainer>\n  );\n};\n","import { useEffect } from 'react';\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n    };\n  }, [ref, handler]);\n};\n","import styled from 'styled-components';\nimport { Panel } from '../../styles/GlobalStyles';\n\nexport const CardGrids = styled.div`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(${({ cardSize }) => (cardSize ? cardSize : '300px')}, 1fr)\n  );\n  gap: 2rem 3rem;\n  align-items: ${({ align }) => (align ? align : 'initial')};\n  justify-items: ${({ justify }) => (justify ? justify : 'initial')};\n`;\nexport const SimpleCard = styled(Panel)`\n  width: 200px;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & img {\n    max-width: 90%;\n    height: 90%;\n  }\n`;\n\nexport const Card = styled(Panel)`\n  width: 300px;\n  height: 300px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows:  220px 50px;\n  grid-template-areas: 'class-logo' 'class-title';\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n  white-space: pre-wrap;\n\n  &:hover img {\n      transform: scale(1.15);\n    }\n  }\n  & img {\n    grid-area: class-logo;\n    max-width: 200px;\n    height: 150px;\n    transition: all 200ms ease-in-out;\n    }\n`;\n\nexport const WorkshopCard = styled(Panel)`\n  display: flex;\n  height: 200px;\n  padding: 10px 10px 10px 80px;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n  & a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: 160px;\n    height: 160px;\n\n    left: -100px;\n    background-color: white;\n    border-radius: 15px;\n    box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%), 0 6px 20px 0 rgb(0 0 0 / 19%);\n  }\n  & img {\n    width: 150px;\n    height: 150px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  margin-right: auto;\n  margin-left: auto;\n  width: 80%;\n`;\nexport const BackgroundContainer = styled.article`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 600px;\n`;\n\nexport const ContainerTitle = styled.h2`\n  margin: 10px;\n  background-color: ${({ colorBg }) => (colorBg ? colorBg : 'transparent')};\n  color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n  font-size: ${({ size }) => (size ? size + 'em' : 'initial')};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: ${({ align }) => (align ? align : 'center')};\n`;\n\nexport const ContalinerList = styled.ul`\n  width: 100%;\n  list-style-position: outside;\n  & > li {\n    padding: 0 5px;\n    margin: 20px 0;\n    &::marker {\n      content: '•';\n      font-size: 1.5em;\n      color: ${({ color }) => (color ? color : 'var(--highligth)')};\n    }\n  }\n`;\n\nexport const ContainerOrderList = styled.ol`\n  width: 100%;\n  list-style-position: outside;\n  & > li {\n    padding: 0 5px;\n    margin: 20px 0;\n    &::marker {\n      font-size: 1.5em;\n      color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n    }\n  }\n`;\n\nexport const ContainerP = styled.p`\n  margin: 20px;\n  font-size: ${({ size }) => (size ? size + 'rem' : 'initial')};\n`;\n\nexport const ToogleContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: var(--main-bg-color);\n  min-height: ${({ open }) => (open ? '200px' : '0px')};\n  width: 100%;\n  transition: all 0.3s ease-out;\n  opacity: ${({ open }) => (open ? '1' : '0')};\n`;\n\nexport const ContaineFexDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: ${(props) => (props.direction ? props.direction : 'column')};\n`;\n","export default __webpack_public_path__ + \"static/media/logo-EC.a1e74e50.svg\";","export default __webpack_public_path__ + \"static/media/logo-kybernus.d18e92f9.svg\";","export default __webpack_public_path__ + \"static/media/logo-edu-arduino.cf909494.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CardGrids } from '../UI/Cards';\nimport { Container } from '../UI/Content';\nimport EC_logo from '../../assets/logos/logo-EC.svg';\nimport KY_logo from '../../assets/logos/logo-kybernus.svg';\nimport AR_logo from '../../assets/logos/logo-edu-arduino.svg';\n\nexport const PartnerLogo = styled.img`\n  width: 250px;\n`;\nexport const Partners = () => {\n  return (\n    <Container>\n      <h4 style={{ fontWeight: 'bold', textAlign: 'center' }}>Con Apoyo de:</h4>\n      <CardGrids align='end' cardSize='200px'>\n        <a\n          href='https://electroniccats.com/'\n          target='_blank'\n          rel='author noreferrer'\n        >\n          <PartnerLogo src={EC_logo} alt='Electronic cats' />\n        </a>\n        <a\n          href='https://centroricardobsalinaspliego.org/kybernus/'\n          target='_blank'\n          rel='external noreferrer'\n        >\n          <PartnerLogo src={KY_logo} alt='Kybernus' />\n        </a>\n        <a\n          href='https://www.arduino.cc/'\n          target='_blank'\n          rel='external noreferrer'\n        >\n          <PartnerLogo src={AR_logo} alt='Arduino education' />\n        </a>\n      </CardGrids>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { routes } from '../../pages/routes';\nimport { Container } from '../UI/Content';\n// import { CenterDiv } from '../../styles/GlobalStyles';\n\nexport const StyledFooterLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 10px 5px;\n  margin: 10px 5px;\n\n  &.${({ activeClassName }) => activeClassName} {\n    color: var(--color-blue);\n  }\n  color: var(--main-fnt-color);\n  font-weight: 100;\n  font-size: 1.2rem;\n`;\nexport const FootNav = () => {\n  return (\n    <Container>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        {routes\n          // ignoring the default path & home\n          .filter(\n            (route) =>\n              route.path !== '/' && route.path !== '*' && route.path !== 'demo'\n          )\n          .map((route) => (\n            <StyledFooterLink\n              key={route.path}\n              to={route.path}\n              exact\n              activeClassName='current'\n            >\n              {route.name}\n            </StyledFooterLink>\n          ))}\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  MainLayout,\n  WrapperContent,\n  WrapperNav,\n  WrapperFootNav,\n  WrapperFoot,\n} from '../../styles/Layout';\n\nimport { Navbar } from '../Navbar';\nimport { Partners } from '../Partners';\nimport { FootNav } from '../Navbar/FootNav';\n\nexport const StyledFooterLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 10px 5px;\n  margin: 0 5px;\n\n  &.${({ activeClassName }) => activeClassName} {\n    color: var(--color-blue);\n  }\n  color: var(--main-fnt-color);\n  font-weight: 100;\n  font-size: 1.2rem;\n`;\n\nexport const AppLayout = ({ children }) => {\n  return (\n    <MainLayout>\n      <WrapperNav>\n        <Navbar />\n      </WrapperNav>\n      <WrapperContent>{children}</WrapperContent>\n      <WrapperFootNav>\n        <FootNav />\n      </WrapperFootNav>\n      <WrapperFoot>\n        <Partners />\n      </WrapperFoot>\n    </MainLayout>\n  );\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/main-bg.53c7e01d.svg\";","import React from 'react';\nimport { element } from 'prop-types';\nimport styled from 'styled-components';\nimport bluback from '../../assets/main-bg.svg';\nimport { BackgroundContainer, Container } from '../UI/Content';\n\nexport const BlueBackground = styled(BackgroundContainer)`\n  color: #fff;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${bluback});\n`;\nexport const BlueContainer = ({ children }) => {\n  return (\n    <BlueBackground>\n      <Container>{children}</Container>\n    </BlueBackground>\n  );\n};\n\nBlueContainer.propTypes = {\n  children: element,\n};\n","import React from 'react';\nimport { element } from 'prop-types';\nimport styled from 'styled-components';\nimport { Container, BackgroundContainer } from '../UI/Content';\n\nexport const GradientBackground = styled(BackgroundContainer)`\n  color: #fff;\n  background: rgb(1, 124, 186);\n  background: linear-gradient(var(--gradient));\n`;\nexport const GradientBackgroundCircle = styled(BackgroundContainer)`\n  color: #fff;\n  background: rgb(0, 224, 171);\n  background: linear-gradient(\n    25deg,\n    rgba(0, 224, 171, 0.9332107843137255) 0%,\n    rgba(1, 124, 186, 0.5746673669467788) 32%,\n    rgba(255, 255, 255, 0.773546918767507) 55%\n  );\n`;\nexport const GradientContainer = ({ children }) => {\n  return (\n    <GradientBackground>\n      <Container>{children}</Container>\n    </GradientBackground>\n  );\n};\nexport const GradientContainerCircle = ({ children }) => {\n  return (\n    <GradientBackgroundCircle>\n      <Container>{children}</Container>\n    </GradientBackgroundCircle>\n  );\n};\nexport const GradientBackgroundRound = styled(GradientBackground)`\n  border-bottom-right-radius: 150px;\n  border-bottom-left-radius: 150px;\n`;\nexport const GradientContainerRound = ({ children }) => {\n  return (\n    <GradientBackgroundRound>\n      <Container>{children}</Container>\n    </GradientBackgroundRound>\n  );\n};\n\nexport const TopBackground = styled(BackgroundContainer)`\n  background: linear-gradient(to top left, white 30%, transparent 30%),\n    linear-gradient(to top right, white 20%, transparent 10%),\n    linear-gradient(90deg, #0071b5 0%, #00ff95 100%);\n`;\nexport const TopContainer = ({ children }) => {\n  return (\n    <TopBackground>\n      <Container>{children}</Container>\n    </TopBackground>\n  );\n};\n\nexport const CrossBarBackground = styled(BackgroundContainer)`\n  background: linear-gradient(169deg, white 25%, transparent 25%),\n    linear-gradient(348deg, white 30%, transparent 30%),\n    linear-gradient(90deg, #0071b5 0%, #00ff95 100%);\n`;\nexport const CrossBarContainer = ({ children }) => {\n  return (\n    <CrossBarBackground>\n      <Container>{children}</Container>\n    </CrossBarBackground>\n  );\n};\n\nexport const HalfBackground = styled(BackgroundContainer)`\n  background: linear-gradient(0deg, white 45%, transparent 30%),\n    linear-gradient(90deg, #0071b5 0%, #00ff95 100%);\n`;\nexport const HalfContainer = ({ children }) => {\n  return (\n    <HalfBackground>\n      <Container>{children}</Container>\n    </HalfBackground>\n  );\n};\n\nHalfContainer.propTypes = {\n  children: element,\n};\n\nTopContainer.propTypes = {\n  children: element,\n};\n\nCrossBarContainer.propTypes = {\n  children: element,\n};\n\nGradientContainer.propTypes = {\n  children: element,\n};\n\nGradientContainerCircle.propTypes = {\n  children: element,\n};\n\nGradientContainerRound.propTypes = {\n  children: element,\n};\n","import styled from 'styled-components';\n\nexport const RoundLink = styled.a`\n  font-weight: bold;\n  min-width: 150px;\n  height: 60px;\n  margin: 10px;\n  background: ${({ bgColor }) => (bgColor ? bgColor : 'var(--highligth)')};\n  border: none;\n  border-radius: 30px;\n  padding: 20px 30px;\n  cursor: pointer;\n  color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n  text-align: center;\n`;\n\nexport const DownloadBtn = styled(RoundLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n\n  span {\n    color: whitesmoke;\n  }\n  div {\n    height: 2rem;\n    text-align: center;\n    width: 2rem;\n    border-radius: 50%;\n    font-size: 1.5rem;\n    .internal {\n      background-color: ${({ bgColor }) =>\n        bgColor ? bgColor : 'var(--highligth)'};\n    }\n  }\n`;\nexport const RoundButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  font-weight: bold;\n  height: 60px;\n  margin: 10px;\n  background: ${({ bgColor }) => (bgColor ? bgColor : 'var(--highligth)')};\n  color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n  border: none;\n  border-radius: 30px;\n  padding: 20px 30px;\n  cursor: pointer;\n`;\n\nexport const RoundSpan = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  font-weight: bold;\n  height: 60px;\n  margin: 10px;\n  background: ${({ bgColor }) => (bgColor ? bgColor : 'var(--highligth)')};\n  color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n  border: none;\n  border-radius: 30px;\n  padding: 20px 30px;\n`;\n","export default __webpack_public_path__ + \"static/media/curso_pcs.ee6bfd25.svg\";","import intro_ia from '../../assets/courses/intro_ia.svg';\nimport etc_resp from '../../assets/courses/etc_resp.svg';\nimport tyni_mach from '../../assets/courses/tyni_mach.svg';\nimport our_kit from '../../assets/courses/our_kit.svg';\nimport platform_edge from '../../assets/courses/platform_edge.svg';\nimport dev_code from '../../assets/courses/dev_code.svg';\nimport temp_sens from '../../assets/courses/temp_sens.svg';\nimport color_sens from '../../assets/courses/color_sens.svg';\nimport imu_sens from '../../assets/courses/imu_sens.svg';\nimport micro_phon from '../../assets/courses/micro_phon.svg';\nimport ia_vis from '../../assets/courses/ia_vis.svg';\nimport curso_final from '../../assets/courses/curso_final.svg';\n\nexport const CURSES_CARDS = [\n  {\n    id: 'introduccion_ia',\n    couseName: 'Introducción a IA',\n    imagePath: intro_ia,\n  },\n  {\n    id: 'etica_responsabilidad',\n    couseName: `Ética &\\nResponsabilidades`,\n    imagePath: etc_resp,\n  },\n  {\n    id: 'tyni_machine_learning',\n    couseName: `Tiny Machine \\nLearning`,\n    imagePath: tyni_mach,\n  },\n  { id: 'nuestro_kit', couseName: 'Nuestro Kit', imagePath: our_kit },\n  {\n    id: 'platforma_edge',\n    couseName: `Plataforma \\n-Edge Impulse-`,\n    imagePath: platform_edge,\n  },\n  {\n    id: 'programando_codigo',\n    couseName: `Programando \\nNuestro Código`,\n    imagePath: dev_code,\n  },\n  {\n    id: 'sensor_temperatura',\n    couseName: `Sensor de \\nTemperatura`,\n    imagePath: temp_sens,\n  },\n  {\n    id: 'sensor_color',\n    couseName: `Sensor de \\nColometría`,\n    imagePath: color_sens,\n  },\n  { id: 'sensor_imu', couseName: `Sensor IMU \\n9 ejes`, imagePath: imu_sens },\n  { id: 'microfono', couseName: `Micrófono`, imagePath: micro_phon },\n  {\n    id: 'vision_artificial',\n    couseName: `Vision Artificial`,\n    imagePath: ia_vis,\n  },\n  { id: 'curso_final', couseName: `Proyecto Final`, imagePath: curso_final },\n];\n","export default __webpack_public_path__ + \"static/media/intro_ia.d9768c33.svg\";","export default __webpack_public_path__ + \"static/media/etc_resp.2cbf048c.svg\";","export default __webpack_public_path__ + \"static/media/tyni_mach.41eac143.svg\";","export default __webpack_public_path__ + \"static/media/our_kit.f48d52cb.svg\";","export default __webpack_public_path__ + \"static/media/platform_edge.2501e750.svg\";","export default __webpack_public_path__ + \"static/media/dev_code.5b2fb66f.svg\";","export default __webpack_public_path__ + \"static/media/temp_sens.f32faba6.svg\";","export default __webpack_public_path__ + \"static/media/color_sens.45e8f845.svg\";","export default __webpack_public_path__ + \"static/media/imu_sens.f004984f.svg\";","export default __webpack_public_path__ + \"static/media/micro_phon.e890a47b.svg\";","export default __webpack_public_path__ + \"static/media/ia_vis.72bb6f1e.svg\";","export default __webpack_public_path__ + \"static/media/curso_final.b11a22c6.svg\";","import React from 'react';\nimport { Card } from '../UI/Cards';\nimport { string } from 'prop-types';\n\nexport const ClassCard = ({ title, imgsrc }) => {\n  return (\n    <Card>\n      <img src={imgsrc} alt={title} />\n      <h3>{title}</h3>\n    </Card>\n  );\n};\nClassCard.propTypes = {\n  title: string.isRequired,\n  imgsrc: string.isRequired,\n};\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { CURSES_CARDS } from '../../consts/courses/CardList';\nimport { ClassCard } from '../../components/ClassCard';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { TopContainer } from '../../components/GradientContainer';\n\nexport const CourseList = ({ coursesCards }) => {\n  return (\n    <TopContainer>\n      <CardGrids>\n        {coursesCards.map((card) => {\n          return (\n            <Link key={card.id} to={`/class/${card.id}`}>\n              <ClassCard title={card.couseName} imgsrc={card.imagePath} />\n            </Link>\n          );\n        })}\n      </CardGrids>\n    </TopContainer>\n  );\n};\n\nCourseList.defaultProps = {\n  coursesCards: CURSES_CARDS,\n};\nCourseList.propTypes = {\n  coursesCards: arrayOf(\n    shape({\n      id: string,\n      couseName: string,\n      imagePath: string,\n    })\n  ),\n};\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport devices from '../../assets/devices/curso_pcs.svg';\nimport { ContainerTitle } from '../../components/UI/Content';\nimport { GradientContainer } from '../../components/GradientContainer';\n\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { CourseList } from '../../components/CourseList';\n\nexport const Courses = () => {\n  return (\n    <AppLayout>\n      <section>\n        <GradientContainer>\n          <>\n            <CardGrids>\n              <CenterDiv>\n                <ContainerTitle size='2' color='#fff'>\n                  Curso completo\n                </ContainerTitle>\n                <p\n                  style={{\n                    textAlign: 'right',\n                    lineHeight: 1.5,\n                    marginInline: '20px 40px',\n                  }}\n                >\n                  Este curso esta abierto para su duplicacion, es libre y\n                  gratuito.\n                  <br />\n                  No sabes donde iniciar, te sugerimos leer nuestra{' '}\n                  <em>Guia de Arranque</em>\n                  <br />\n                  Máquinas Inteligentes tiene el objetivo de introducirte en la ciencia de\n                  datos y de desarrollar habilidades y competencias básicas para la\n                  solución de problemas, creatividad, todo esto con la aplicación de\n                  conceptos de electrónica, programación e inteligencia artificial\n                </p>\n              </CenterDiv>\n              <img src={devices} alt='chips' />\n            </CardGrids>\n          </>\n        </GradientContainer>\n        <CourseList />\n      </section>\n    </AppLayout>\n  );\n};\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { string, array } from 'prop-types';\n\nconst StylesTable = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  color: ${({ color }) => (color ? color : 'var(--highligth)')};\n  table {\n    border-spacing: 0;\n    border: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    thead th {\n      border: 0;\n      background-color: ${({ color }) => (color ? color : 'trasparent')};\n      color: ${({ color }) => (color ? '#fff' : color)};\n      height: 50px;\n    }\n    th,\n    td {\n      height: 150px;\n      width: 150px;\n      text-align: center;\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid\n        ${({ color }) => (color ? color : 'var(--highligth)')};\n      border-right: 1px solid\n        ${({ color }) => (color ? color : 'var(--highligth)')};\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n// eslint-disable-next-line\nexport const  Table = ({ columns, data, color }) => {\n  // Use the state and functions returned from useTable to build your UI\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data,\n    });\n\n  // Render the UI for your table\n  return (\n    <StylesTable color={color}>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </StylesTable>\n  );\n};\n\nTable.propTypes = {\n  data: array.isRequired,\n  columns: array.isRequired,\n  color: string,\n};\n","export default __webpack_public_path__ + \"static/media/red-sam.b1d40cdf.svg\";","import electronic from '../assets/workers/ec.svg';\nimport inventors from '../assets/workers/inventorshouse.svg';\nimport garage from '../assets/workers/garage.png';\nimport redpanda from '../assets/workers/redpanda.svg';\n\nexport const WORKSHOPS = [\n  {\n    id: 'ec',\n    title: 'Electronic Cats Education',\n    description: `Somos una empresa mexicana dedicada al diseño y fabricación de sistemas embebidos para el público en general y las empresas privadas,\n      caracterizados por trabajar siempre con pasión por el desarrollo de dispositivos electrónicos,\n      buscando contribuir al bienestar de nuestros consumidores ofreciendo calidad productos adecuados a sus necesidades.`,\n    imagePath: electronic,\n    page: 'https://electroniccats.com/',\n  },\n  {\n    id: 'inventor_house',\n    title: 'Inventor House',\n    description: `Espacio físico que integra personas que puedan compartir y/o colaborar en trabajo\n    y conocimiento que a través de la cultura de innovación, puedan generar diversos proyectos.\n    \"Es posible lo imposible, basta con pedir ayuda a las personas adecuadas\"`,\n    imagePath: inventors,\n    page: 'http://theinventorhouse.org/',\n  },\n  {\n    id: 'garage_hub',\n    title: 'Garage Hub',\n    description: `Espacio creativo que diseña experiencias de aprendizaje innovadoras\n    a través de la metodología STEM ( Ciencia Tecnología Ingeniería y Matemáticas) con impacto social.\n    Contamos con instalaciones en México y Estados Unidos, siendo una empresa binacional de gran impacto tecnológico,\n    trabajamos con Instituciones Gubernamentales, Educativas y con el Sector Privado de nuestra ciudad.`,\n    imagePath: garage,\n    page: 'https://elgaragehub.com/',\n  },\n  {\n    id: 'red_panda',\n    title: 'Red Panda',\n    description: `Brindamos servicio de orientación en prácticas STEM a través del uso de herramientas, máquinas y plataformas digitales.\n    ¿Qué hacemos? Compartir prácticas de proyectos educativos con el fin de fomentar el interés por las áreas STEM que promuevan la creatividad,\n    curiosidad y el juicio crítico a través del uso de conceptos teóricos puestos en práctica mediante el uso de tecnologías.`,\n    imagePath: redpanda,\n    page: 'https://www.facebook.com/RedPandaTec/',\n  },\n];\n","export default __webpack_public_path__ + \"static/media/ec.250c6507.svg\";","export default __webpack_public_path__ + \"static/media/inventorshouse.894f578e.svg\";","export default __webpack_public_path__ + \"static/media/garage.591298fb.png\";","export default __webpack_public_path__ + \"static/media/redpanda.71b33001.svg\";","import { useCallback, useState } from 'react';\n// based on https://blog.logrocket.com/forms-in-react-in-2020/\n/**\n *\n * @param {String} initialValue\n * const emailField = useFormTextField();\n * <input\n          type=\"email\"\n          id=\"email\"\n          {...emailField}\n        />\n    @returns {Object} {value: String, onChange:Function}\n */\nexport const useFormTextField = (initialValue = '', validate = () => '') => {\n  const [error, setError] = useState('');\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = useCallback(\n    (e) => {\n      setError(validate(e.target.value));\n      return setValue(e.target.value);\n    },\n    [validate]\n  );\n  const resetValues = () => {\n    setValue('');\n    setError('');\n  };\n  return { value, onChange, error, resetValues };\n};\nexport const useFormFileField = () => {\n  const [value, setValue] = useState();\n\n  const onChange = useCallback((e) => {\n    return setValue(e.target.files[0]);\n  }, []);\n  return { value, onChange };\n};\n\n/**\n *\n * @param {Object} initialValues\n *   const { formFields, createChangeHandler } = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n  <input\n          type=\"email\"\n          id=\"email\"\n          value={formFields.email}\n          onChange={createChangeHandler(\"email\")}\n        />\n */\nexport const useFormFields = (initialValues, validations) => {\n  const [errors, setErrors] = useState({});\n  const [formFields, setFormFields] = useState(initialValues);\n  // custer of handler event\n  const createChangeHandler = (key) => (e) => {\n    const value = e.target.value;\n    setErrors((prev) => ({ ...prev, [key]: validations[key](value) }));\n    setFormFields((prev) => ({ ...prev, [key]: value }));\n  };\n  return { formFields, createChangeHandler, errors };\n};\n","import styled from 'styled-components';\n\nexport const InpuText = styled.input.attrs((props) => ({\n  colorFocus: props.error\n    ? 'var(--error)'\n    : props.colorFocus || 'var(--secondary-color)',\n}))`\n  width: 300px;\n  height: 35px;\n  outline: none;\n  margin-top: 5px;\n  padding: 6px;\n  font-size: var(--font-size);\n  border: none;\n  border-bottom-color: var(--color-darkgray);\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  &:hover,\n  &:active,\n  &:focus {\n    border-bottom-color: var(--color-blue);\n  }\n`;\nexport const LabelText = styled.label`\n  color: var(--color-blue);\n  font-size: var(--font-size);\n`;\nexport const SpanError = styled.span`\n  display: block;\n  height: 20px;\n  margin: 5px;\n  color: var(--color-pink);\n  font-size: 0.6rem;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InpuText, LabelText, SpanError, InputContainer } from './styles';\n\nexport const TextInput = ({\n  label,\n  id,\n  type,\n  logical,\n  placeholder,\n  errorMessage,\n  ...props\n}) => {\n  return (\n    <InputContainer>\n      <LabelText htmlFor={id}>{label}</LabelText>\n      <InpuText\n        error={errorMessage}\n        type={type}\n        id={id}\n        {...logical}\n        placeholder={placeholder}\n        {...props}\n      />\n      <SpanError>{errorMessage}</SpanError>\n    </InputContainer>\n  );\n};\n\nTextInput.defaultProps = {\n  label: 'Input',\n  placeholder: '',\n  type: 'text',\n  errorMessage: '',\n};\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  errorMessage: PropTypes.string,\n  logical: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['password', 'email', 'text', 'url']),\n};\n","import styled from 'styled-components';\n\nexport const LabelText = styled.label`\n  color: var(--color-blue);\n  margin-bottom: 0.625rem;\n`;\n\nexport const TextareaInput = styled.textarea`\n  border-radius: 8px;\n  padding: 0.75rem 1rem;\n  font-family: inherit;\n  background-color: transparent;\n  font-family: var(--default-font), sans-serif;\n  font-size: var(--font-size);\n`;\n\nexport const SpanError = styled.span`\n  display: block;\n  height: 20px;\n  color: var(--color-pink);\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextareaInput, LabelText, InputContainer, SpanError } from './styles';\n\nexport const TextArea = ({ label, id, rows, errorMessage, logical }) => {\n  return (\n    <InputContainer>\n      <LabelText htmlFor={id}>{label}</LabelText>\n      <TextareaInput rows={rows} {...logical}></TextareaInput>\n      <SpanError>{errorMessage}</SpanError>\n    </InputContainer>\n  );\n};\n\nTextArea.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  rows: PropTypes.number,\n  errorMessage: PropTypes.string,\n  logical: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n};\n\nTextArea.defaultProps = {\n  id: null,\n  label: 'Textarea',\n  rows: 5,\n  errorMessage: '',\n};\n\nexport default TextArea;\n","import React from 'react';\nimport { DownloadBtn } from './styles';\nimport { string } from 'prop-types';\nimport { IconDownload } from '../UI/Icons';\n\nexport const DownLoadButton = ({\n  pathToFile,\n  downloadName,\n  label,\n  bgColor,\n}) => {\n  return (\n    <DownloadBtn bgColor={bgColor} href={pathToFile} download={downloadName}>\n      <span>{label}</span>\n      <div className='external'>\n        <div className='internal'>\n          <IconDownload />\n        </div>\n      </div>\n    </DownloadBtn>\n  );\n};\n\nDownLoadButton.propTypes = {\n  pathToFile: string.isRequired,\n  downloadName: string.isRequired,\n  label: string.isRequired,\n  bgColor: string,\n};\n","import React from 'react';\nimport { RoundButton } from './styles';\nimport { string, func, node } from 'prop-types';\n\nexport const ActionButton = ({\n  children,\n  bgColor,\n  color,\n  onAction,\n  buttonType = 'submit',\n  ...props\n}) => {\n  return (\n    <RoundButton\n      bgColor={bgColor}\n      color={color}\n      type={buttonType}\n      onClick={onAction}\n      {...props}\n    >\n      {children}\n    </RoundButton>\n  );\n};\n\nActionButton.propTypes = {\n  buttonType: string,\n  onAction: func,\n  children: node,\n  bgColor: string,\n  color: string,\n};\n","export default __webpack_public_path__ + \"static/media/resourse-sam.ea3b7b1a.svg\";","import { useEffect, useState } from 'react';\nimport emailjs from 'emailjs-com';\n\nconst USER_ID = process.env.REACT_APP_EMAILJS_USER_ID;\nconst TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE;\nconst SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID;\n\nexport const useEmail = () => {\n  const [messageStatus, setMessageStatus] = useState({\n    status: null,\n    message: '',\n  });\n  const [messageLoadin, setLoading] = useState(false);\n\n  useEffect(() => {\n    emailjs.init(USER_ID);\n  }, []);\n  /**\n   *\n   * @param {*}  data{\n    email:string\n    name:string\n    lastname:string\n    tel:string\n    message:string\n    }\n   * @param {*} callback\n   */\n  const sendEmail = (data, callback = () => {}) => {\n    setLoading(true);\n    emailjs\n      .send(SERVICE_ID, TEMPLATE_ID, data)\n      .then(\n        function (response) {\n          setMessageStatus({\n            status: response.status,\n            message:\n              'Mensaje enviado! Pronto nos pondremos en contacto con usted.',\n          });\n        },\n        function (error) {\n          setMessageStatus({\n            status: error,\n            message:\n              'Upss! algo salió mal intenta con nuestras redes sociales.',\n          });\n        }\n      )\n      .then(() => {\n        callback();\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  return { messageStatus, messageLoadin, sendEmail };\n};\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport {\n  ContainerTitle,\n  Container,\n  ContainerP,\n} from '../../components/UI/Content';\nimport { HalfContainer } from '../../components/GradientContainer';\nimport { Panel } from '../../styles/GlobalStyles';\nimport { useFormTextField } from '../../hooks/useFormFields';\nimport { TextInput } from '../../components/TextInput';\nimport { TextArea } from '../../components/TextArea';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { ActionButton } from '../../components/Buttons';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport samResourse from '../../assets/sam/resourse-sam.svg';\nimport { useEmail } from '../../hooks/useEmail';\nimport {\n  IconFaceBgColor,\n  IconYoutubeBgColor,\n  IconGithubBgColor,\n  IconInstagramColor,\n} from '../../components/UI/Icons';\nimport { IconLink } from '../../components/UI/Header';\n\nexport const requiredValidation = (values) => {\n  let error = null;\n  if (!values) {\n    error = 'NECESITAMOS ESTE CAMPO';\n  }\n  return error;\n};\nexport const emailValidation = (values) => {\n  let error = null;\n  if (!values) {\n    error = 'NECESITAMOS UN EMAIL';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values)) {\n    error = 'FORMATO INVALIDO';\n  }\n  return error;\n};\n\nexport const ContactUs = () => {\n  const emailField = useFormTextField('', emailValidation);\n  const nameField = useFormTextField('', requiredValidation);\n  const lastNameField = useFormTextField('');\n  const celField = useFormTextField('');\n  const messageField = useFormTextField('', requiredValidation);\n  const { messageStatus, messageLoadin, sendEmail } = useEmail();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (emailField.error || nameField.error || messageField.error) {\n      ResetData();\n      return;\n    }\n    sendEmail(preparData(), ResetData);\n  };\n\n  const ResetData = () => {\n    emailField.resetValues();\n    nameField.resetValues();\n    lastNameField.resetValues();\n    celField.resetValues();\n    messageField.resetValues();\n  };\n\n  const preparData = () => {\n    let Data = {\n      email: emailField.value,\n      name: nameField.value,\n      lastname: lastNameField.value,\n      tel: celField.value,\n      message: messageField.value,\n    };\n    return Data;\n  };\n\n  return (\n    <AppLayout>\n      <HalfContainer>\n        <>\n          <ContainerTitle color='white' size='3'>\n            Envianos un Mensaje\n          </ContainerTitle>\n          <Panel>\n            <Container>\n              <ContainerP style={{ textAlign: 'center', padding: '20px' }}>\n                {`Tienes alguna duda o te interesa que llevemos este taller a tu escuela u\n            organizacion completa el siguente formulario con tus datos\n            y nos pondremos en contacto contigo.`}\n              </ContainerP>\n              <form onSubmit={handleSubmit}>\n                <CardGrids>\n                  <TextInput\n                    label='Nombre'\n                    logical={nameField}\n                    type={'text'}\n                    id={'SU_name'}\n                    required\n                  />\n                  <TextInput\n                    label='Apellido'\n                    logical={lastNameField}\n                    type={'text'}\n                    id={'SU_lastname'}\n                    required\n                  />\n                  <TextInput\n                    label='Telefono Celular'\n                    logical={celField}\n                    type={'text'}\n                    id={'SU_cel'}\n                    required\n                  />\n                  <TextInput\n                    errorMessage={emailField.error}\n                    label='Email'\n                    logical={emailField}\n                    type={'email'}\n                    id={'SU_email'}\n                    required\n                  />\n                </CardGrids>\n                <TextArea\n                  id={'SU_message'}\n                  label='Mensaje'\n                  logical={messageField}\n                  required\n                />\n                <CenterDiv>\n                  <span>{messageStatus.message}</span>\n                  <ActionButton\n                    color='white'\n                    bgColor={'linear-gradient(var(--gradient));'}\n                    disabled={messageLoadin}\n                  >\n                    {messageLoadin ? 'Enviando...' : 'Enviar Mensaje'}\n                  </ActionButton>\n                </CenterDiv>\n              </form>\n            </Container>\n          </Panel>\n          <CardGrids>\n            <div style={{ zIndex: 10 }}>\n              <ContainerP size='1.5'>\n                Deseas,apoyar este proyecto para crear mejor contenido,\n                actualizaciones y que llegue a mas personas\n              </ContainerP>\n              <form\n                action='https://www.paypal.com/donate'\n                method='post'\n                target='_top'\n              >\n                <input\n                  type='hidden'\n                  name='hosted_button_id'\n                  value='X29Y7VGRDU2KJ'\n                />\n                <input\n                  type='image'\n                  src='https://www.paypalobjects.com/es_XC/MX/i/btn/btn_donateCC_LG.gif'\n                  border='0'\n                  name='submit'\n                  title='PayPal - The safer, easier way to pay online!'\n                  alt='Donate with PayPal button'\n                />\n                <img\n                  alt=''\n                  border='0'\n                  src='https://www.paypal.com/es_MX/i/scr/pixel.gif'\n                  width='1'\n                  height='1'\n                />\n              </form>\n              <ContainerTitle size='1.5'>\n                Siguenos en:\n                <IconLink\n                  href='https://www.facebook.com/electroniccats'\n                  target='_blank'\n                >\n                  <IconFaceBgColor />\n                </IconLink>\n                <IconLink\n                  href='https://www.youtube.com/channel/UCA9pODMFvrLEAB9vYWiLebg'\n                  target='_blank'\n                >\n                  <IconYoutubeBgColor />\n                </IconLink>\n                <IconLink\n                  href='https://github.com/ElectronicCats'\n                  target='_blank'\n                >\n                  <IconGithubBgColor />\n                </IconLink>\n                <IconLink\n                  href='https://www.instagram.com/electroniccats/'\n                  target='_blank'\n                >\n                  <IconInstagramColor />\n                </IconLink>\n              </ContainerTitle>\n            </div>\n            <img\n              src={samResourse}\n              alt='Sam '\n              style={{\n                width: '300px',\n                position: 'relative',\n                left: '100px',\n                bottom: '100px',\n              }}\n            />\n          </CardGrids>\n        </>\n      </HalfContainer>\n    </AppLayout>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo_microchip.c08934d2.svg\";","export default __webpack_public_path__ + \"static/media/sam-stand.f6a86a97.svg\";","import React from 'react';\nimport { CardGrids } from '../UI/Cards';\nimport { ContalinerList, ContainerTitle } from '../UI/Content';\n\nimport { string, arrayOf } from 'prop-types';\n\nexport const ExplainCard = ({\n  title,\n  color,\n  bullets,\n  descriptions,\n  cardSize,\n}) => {\n  return (\n    <article style={{ margin: '20px' }}>\n      <CardGrids cardSize={cardSize}>\n        <ContainerTitle\n          size='1.5'\n          color={color}\n          aling='center'\n          style={{ alignSelf: 'center' }}\n        >\n          {title}\n        </ContainerTitle>\n        <div style={{ alignSelf: 'center' }}>\n          <>\n            {descriptions}\n            {bullets ? (\n              <ContalinerList color={color}>\n                {bullets.map((text, i) => {\n                  return <li key={`${title} bullet ${i}`}>{text}</li>;\n                })}\n              </ContalinerList>\n            ) : null}\n          </>\n        </div>\n      </CardGrids>\n    </article>\n  );\n};\nExplainCard.propTypes = {\n  title: string.isRequired,\n  descriptions: string,\n  bullets: arrayOf(string),\n  color: string,\n  cardSize: string,\n};\n","export default __webpack_public_path__ + \"static/media/guia-cel.48c7d620.svg\";","export default __webpack_public_path__ + \"static/media/guia-ipod.5cbecbd1.svg\";","export default __webpack_public_path__ + \"static/media/guia-usb.6d25d20f.svg\";","export default __webpack_public_path__ + \"static/media/guía-audifonos.f4bd2e75.svg\";","export default __webpack_public_path__ + \"static/media/guía-tablet.11dac889.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport { string } from 'prop-types';\nimport guiaCel from '../../assets/devices/guia-cel.svg';\nimport guiaIpod from '../../assets/devices/guia-ipod.svg';\nimport guiaUsb from '../../assets/devices/guia-usb.svg';\nimport guiaAudi from '../../assets/devices/guía-audifonos.svg';\nimport guiaTab from '../../assets/devices/guía-tablet.svg';\nimport { CardGrids } from '../../components/UI/Cards';\n\nexport const StyledDevice = styled.img`\n  justify-self: center;\n  width: ${({ imgWidth }) => (imgWidth ? imgWidth : '200px')};\n  height: ${({ imgHeight }) => (imgHeight ? imgHeight : '150px')};\n`;\n\nexport const ImagesGrids = ({ imgWidth, imgHeight }) => {\n  return (\n    <CardGrids align='center' justify='center'>\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaCel}\n        alt='device-cel'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaIpod}\n        alt='device-ipod'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaUsb}\n        alt='device-usb'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaAudi}\n        alt='device-audi'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaTab}\n        alt='device-tab'\n      />\n    </CardGrids>\n  );\n};\n\nImagesGrids.propTypes = {\n  imgWidth: string,\n  imgHeight: string,\n};\n\nexport const FlexImages = ({ imgWidth, imgHeight }) => {\n  return (\n    <div\n      style={{\n        display: 'grid',\n        justifyContent: 'space-evenly',\n        gridTemplateColumns: ' 1fr 1fr 1fr',\n        alignItems: 'center',\n      }}\n    >\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaCel}\n        alt='device-cel'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaIpod}\n        alt='device-ipod'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaUsb}\n        alt='device-usb'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaAudi}\n        alt='device-audi'\n      />\n      <StyledDevice\n        imgWidth={imgWidth}\n        imgHeight={imgHeight}\n        src={guiaTab}\n        alt='device-tab'\n      />\n    </div>\n  );\n};\nFlexImages.propTypes = {\n  imgWidth: string,\n  imgHeight: string,\n};\n","export default __webpack_public_path__ + \"static/media/obj_trasn.8dce90a2.svg\";","export default __webpack_public_path__ + \"static/media/objetivos_cards.55a3e9d9.svg\";","export default __webpack_public_path__ + \"static/media/objetivos_grafica.9d970d75.svg\";","export default __webpack_public_path__ + \"static/media/objetivos-sam.9671ff2a.svg\";","import React from 'react';\nimport { string, bool, node } from 'prop-types';\n\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { SimpleCard } from '../UI/Cards';\nimport { ContainerP } from '../UI/Content';\n\nexport const ThanksCard = ({ description, imgsrc, title, addCard = true }) => {\n  return (\n    <CenterDiv direction='row'>\n      {addCard ? (\n        <SimpleCard>\n          <img src={imgsrc} alt={title} />\n        </SimpleCard>\n      ) : (\n        <img src={imgsrc} alt={title} />\n      )}\n\n      <ContainerP style={{ maxWidth: '150px' }}>{description}</ContainerP>\n    </CenterDiv>\n  );\n};\n\nThanksCard.propTypes = {\n  title: string,\n  addCard: bool,\n  description: string.isRequired | node,\n  imgsrc: string.isRequired,\n};\n","import React from 'react';\nimport { TabPanel } from '@zendeskgarden/react-tabs';\nimport { arrayOf, shape, string } from 'prop-types';\n\nimport { ExplainCard } from '../ExplainCard';\nimport { CenterDiv } from '../../styles/GlobalStyles';\n\nexport const Introduction = ({ introClass, vimeoSrc }) => {\n  return (\n    <TabPanel item='tab-1'>\n      {introClass.map(({ title, description, bullets }) => {\n        return (\n          <ExplainCard\n            key={title}\n            title={title}\n            color='var(--color-blue)'\n            descriptions={description}\n            bullets={bullets}\n            cardSize='300px'\n          />\n        );\n      })}\n      <CenterDiv>\n        <iframe\n          id='my_frame'\n          title='intro Video'\n          src={vimeoSrc}\n          frameBorder='0'\n          allow='autoplay; fullscreen'\n          allowFullScreen\n          style={{\n            width: '100%',\n            minWidth: '340px',\n            maxWidth: '640px',\n            height: '564px',\n          }}\n        ></iframe>\n      </CenterDiv>\n    </TabPanel>\n  );\n};\nIntroduction.defaultProps = {\n  vimeoSrc: 'https://player.vimeo.com/video/522444610',\n  introClass: [\n    {\n      title: 'OBJETIVO',\n      description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam rhoncus et erat id sagittis.\n        Donec placerat tempus facilisis. Aenean sollicitudin commodo leo,\n        ac feugiat lorem tincidunt nec. Proin dictum risus vel nisl blandit,\n        id tincidunt turpis tristique. Donec sollicitudin scelerisque lorem.`,\n      bullets: ['lalaalla', 'Arduino 1'],\n    },\n    {\n      title: 'APRENDIZAJE ESPERADO',\n      description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam rhoncus et erat id sagittis.\n        Donec placerat tempus facilisis. Aenean sollicitudin commodo leo,\n        ac feugiat lorem tincidunt nec. Proin dictum risus vel nisl blandit,\n        id tincidunt turpis tristique. Donec sollicitudin scelerisque lorem.`,\n    },\n    {\n      title: `COMPETENCIA QUE \\nSE FAVORECE`,\n      description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam rhoncus et erat id sagittis.\n        Donec placerat tempus facilisis. Aenean sollicitudin commodo leo,\n        ac feugiat lorem tincidunt nec. Proin dictum risus vel nisl blandit,\n        id tincidunt turpis tristique. Donec sollicitudin scelerisque lorem.`,\n      bullets: ['lalaalla', 'Arduino 1'],\n    },\n    {\n      title: `CONTENIDOS \\nTEMÁTICOS`,\n      description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam rhoncus et erat id sagittis.\n        Donec placerat tempus facilisis. Aenean sollicitudin commodo leo,\n        ac feugiat lorem tincidunt nec. Proin dictum risus vel nisl blandit,\n        id tincidunt turpis tristique. Donec sollicitudin scelerisque lorem.`,\n    },\n  ],\n};\nIntroduction.propTypes = {\n  vimeoSrc: string,\n  introClass: arrayOf(\n    shape({\n      title: string,\n      description: string,\n    })\n  ),\n};\n","import { useState, useCallback } from 'react';\n/**\n *\n * @param {boolean} initialValue\n * @return {Array}\n */\nexport const useToggle = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(() => {\n    setValue((v) => !v);\n  }, []);\n  return [value, toggle];\n};\n","import React from 'react';\nimport { string, element } from 'prop-types';\n\nimport { useToggle } from '../../hooks/useToggle';\nimport { ToogleContent, ContainerTitle, Container } from '../UI/Content';\n\nexport const DropContent = ({ title, color, children }) => {\n  const [open, toggle] = useToggle();\n\n  return (\n    <article>\n      <ContainerTitle\n        align='left'\n        color={color}\n        size={1.5}\n        onClick={toggle}\n        style={{ cursor: 'pointer' }}\n      >\n        {title} {`(${open ? '-' : '+'})`}\n      </ContainerTitle>\n      <ToogleContent open={open}>\n        <Container>{open ? children : null}</Container>\n      </ToogleContent>\n    </article>\n  );\n};\n\nDropContent.propTypes = {\n  title: string.isRequired,\n  color: string,\n  children: element,\n};\n","import React from 'react';\nimport { arrayOf, shape, string, element } from 'prop-types';\nimport { TabPanel } from '@zendeskgarden/react-tabs';\n\nimport { DropContent } from '../../components/DropContent';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { ContainerTitle } from '../../components/UI/Content';\nimport { DownLoadButton } from '../../components/Buttons';\nexport const CourseClass = ({\n  downloadLabel,\n  pathToDownloadFile,\n  downloadFileName,\n  content,\n}) => {\n  return (\n    <TabPanel item='tab-2'>\n      <CardGrids>\n        <ContainerTitle size='1.5' color='var(--color-green)'>\n          CONTENIDO DE CLASE\n        </ContainerTitle>\n        <DownLoadButton\n          pathToFile={pathToDownloadFile}\n          downloadName={downloadFileName}\n          bgColor='var(--color-green)'\n          label={downloadLabel}\n        />\n      </CardGrids>\n\n      {content.map(\n        ({\n          title,\n          description,\n          videoClass = 'https://player.vimeo.com/video/522444610',\n        }) => {\n          return (\n            <DropContent key={title} title={title} color='var(--color-green)'>\n              {description}\n              <iframe\n                id={`my_frame ${title}`}\n                title={`my video ${title}`}\n                src={videoClass}\n                frameBorder='0'\n                allow='autoplay; fullscreen'\n                allowFullScreen\n                style={{\n                  width: '100%',\n                  minWidth: '340px',\n                  maxWidth: '640px',\n                  height: '564px',\n                }}\n              ></iframe>\n            </DropContent>\n          );\n        }\n      )}\n    </TabPanel>\n  );\n};\n\nCourseClass.defaultProps = {\n  downloadFileName: 'Nombre del archivo a descargar',\n  downloadLabel: 'logo_inteligent',\n  pathToDownloadFile: '/assets/logo_desk.png',\n  content: [\n    {\n      title: 'Clase 1',\n      description: <h1>Hello</h1>,\n    },\n    {\n      title: 'Clase 2',\n      description: (\n        <div>\n          <h2>Welcome</h2> <p>How are you</p>\n        </div>\n      ),\n    },\n    {\n      title: 'Clase 3',\n      description: (\n        <div>\n          <p>World</p>\n        </div>\n      ),\n    },\n  ],\n};\n\nCourseClass.propTypes = {\n  downloadFileName: string,\n  downloadLabel: string,\n  pathToDownloadFile: string,\n  content: arrayOf(\n    shape({\n      title: string,\n      description: element,\n      videoClass: string,\n    })\n  ),\n};\n","import React from 'react';\nimport { TabPanel } from '@zendeskgarden/react-tabs';\n\nimport { DownLoadButton } from '../../components/Buttons';\nimport { arrayOf, shape, string, object } from 'prop-types';\nimport { ContainerTitle } from '../UI/Content';\nimport samResourse from '../../assets/sam/resourse-sam.svg';\nimport { FlexImages } from '../Devices';\n\nexport const Resourses = ({ mainLink, color, links }) => {\n  return (\n    <TabPanel item='tab-3'>\n      <section\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <DownLoadButton\n          pathToFile={mainLink.pathToFile}\n          downloadName={mainLink.downloadName}\n          bgColor={color}\n          label={mainLink.label}\n        />\n        <div style={{ display: 'flex' }}>\n          <img src={samResourse} alt='Sam ' style={{ width: '300px' }} />\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n            }}\n          >\n            {links.map(({ label, pathToFile, downloadName }) => {\n              return (\n                <a\n                  key={`${label} ${pathToFile}`}\n                  href={pathToFile}\n                  download={downloadName}\n                >\n                  <ContainerTitle color={color} size={1.5}>\n                    {label}\n                  </ContainerTitle>\n                </a>\n              );\n            })}\n            <FlexImages imgWidth='150px' imgHeight='100px' />\n          </div>\n        </div>\n      </section>\n    </TabPanel>\n  );\n};\n\nResourses.defaultProps = {\n  mainLink: {\n    pathToFile: '/assets/logo_desk.png',\n    downloadName: 'lodo_inteligent',\n    label: 'Recurso de descargar',\n  },\n  links: [\n    {\n      pathToFile: '/assets/logo_desk.png',\n      downloadName: 'lodo_inteligent',\n      label: 'Link a Lectura',\n    },\n    {\n      pathToFile: '/assets/logo_desk.png',\n      downloadName: 'lodo_inteligent',\n      label: 'Link a Video de Complemento',\n    },\n  ],\n  color: 'var(--color-orange)',\n};\n\nResourses.propTypes = {\n  mainLink: shape({\n    pathToFile: string.isRequired,\n    downloadName: string.isRequired,\n    label: string.isRequired,\n  }),\n  links: arrayOf(object),\n  color: string,\n};\n","import React from 'react';\nimport { TabPanel } from '@zendeskgarden/react-tabs';\nimport { string, arrayOf } from 'prop-types';\n\nimport { ContainerTitle, ContalinerList, ContainerP } from '../UI/Content';\nimport { DropContent } from '../../components/DropContent';\n\nexport const Practice = ({\n  color,\n  precticeName,\n  time,\n  meterials,\n  objective,\n  steps,\n}) => {\n  return (\n    <TabPanel item='tab-4'>\n      <ContainerTitle size='1.5' align='left' color={color}>\n        {precticeName}\n      </ContainerTitle>\n      <ContainerTitle size='1.1' align='left' color={color}>\n        TIEMPO ESTIMADO <i style={{ fontWeight: '200' }}>{time}</i>\n      </ContainerTitle>\n      <DropContent title='Material' color={color}>\n        <div>\n          <ContalinerList color={color}>\n            {meterials.map((text, i) => {\n              return <li key={`${text} bullet ${i}`}>{text}</li>;\n            })}\n          </ContalinerList>\n        </div>\n      </DropContent>\n      <DropContent title='Objetivo' color={color}>\n        <ContainerP>{objective}</ContainerP>\n      </DropContent>\n      <DropContent title='Procedimiento' color={color}>\n        <ContainerP>{steps}</ContainerP>\n      </DropContent>\n    </TabPanel>\n  );\n};\n\nPractice.defaultProps = {\n  color: 'var(--color-pink)',\n  precticeName: 'Nombre de la practica',\n  time: '01:30 HORA',\n  meterials: ['kit de arduino', 'Laptop', 'Internet', 'componentes'],\n  objective: 'Objectivo de la practica',\n  steps: 'Procedimientos de la practica',\n};\n\nPractice.propTypes = {\n  precticeName: string.isRequired,\n  color: string,\n  time: string.isRequired,\n  meterials: arrayOf(string).isRequired,\n  objective: string.isRequired,\n  steps: string.isRequired,\n};\n","import React from 'react';\nimport { arrayOf, shape, string, number } from 'prop-types';\n\nimport { ContainerTitle } from '../../components/UI/Content';\nimport { Table } from '../../components/Tables';\nimport { TabPanel } from '@zendeskgarden/react-tabs';\n\nexport const Plan = ({ tableConent }) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Tema',\n        accessor: 'theme',\n      },\n      {\n        Header: 'Objetivo',\n        accessor: 'objective',\n      },\n      {\n        Header: 'Actividades',\n        accessor: 'activitie',\n      },\n      {\n        Header: 'Materiales',\n        accessor: 'material',\n      },\n      {\n        Header: 'Min.Clase',\n        accessor: 'classTime',\n      },\n    ],\n    []\n  );\n  const data = React.useMemo(() => tableConent, [tableConent]);\n  return (\n    <TabPanel item='tab-5'>\n      <ContainerTitle size='1.5' align='center' color='var(--color-purple)'>\n        ESTRUCTURA DE LA CLASE\n      </ContainerTitle>\n      <Table columns={columns} data={data} color='var(--color-purple)' />\n    </TabPanel>\n  );\n};\n\nPlan.defaultProps = {\n  tableConent: [\n    {\n      theme: 'Alejandro',\n      objective: 'Medina',\n      activitie: 'relationship',\n      material: 'lalalala',\n      classTime: Math.floor(Math.random() * 100),\n    },\n    {\n      theme: 'Mario',\n      objective: 'marambo',\n      activitie: 'relationship',\n      material: 'lalalala',\n      classTime: Math.floor(Math.random() * 100),\n    },\n  ],\n};\nPlan.propTypes = {\n  tableConent: arrayOf(\n    shape({\n      theme: string,\n      objective: string,\n      activitie: string,\n      material: string,\n      classTime: string | number,\n    })\n  ),\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { arrayOf, shape, string, number, element } from 'prop-types';\n\nimport { Tabs, TabList, Tab } from '@zendeskgarden/react-tabs';\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\nimport { Introduction } from './Introduction';\nimport { CourseClass } from './CourseClass';\nimport { Resourses } from './Resourses';\nimport { Practice } from './Practice';\nimport { Plan } from './Plan';\n\n// eslint-disable-next-line\nconst TABS = [\n  {\n    item: 'tab-1',\n    label: 'Introducción',\n    color: 'var(--color-blue)',\n  },\n  {\n    item: 'tab-2',\n    label: 'Clase',\n    color: 'var(--color-green)',\n  },\n  {\n    item: 'tab-3',\n    label: 'Recursos',\n    color: 'var(--color-orange)',\n  },\n  {\n    item: 'tab-4',\n    label: 'Práctica',\n    color: 'var(--color-pink)',\n  },\n  {\n    item: 'tab-5',\n    label: 'Plan de sesión',\n    color: 'var(--color-purple)',\n  },\n];\nconst StyledTab = styled(Tab)`\n  color: ${({ color }) => (color ? color : 'var(--highligth)')};\n  padding: 20px;\n  font-size: 1.5em;\n  &:hover {\n    color: ${({ color }) => (color ? color : 'var(--highligth)')};\n  }\n`;\nconst StyledTabsList = styled(TabList)`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Course = ({\n  introContent,\n  planContent,\n  contentClass,\n  practiceClass,\n  resoursesClass,\n}) => {\n  const [selectedTab, setSelectedTab] = useState('tab-1');\n\n  return (\n    <ThemeProvider>\n      <Tabs selectedItem={selectedTab} onChange={setSelectedTab}>\n        <StyledTabsList>\n          {TABS.map((tab) => {\n            return (\n              <StyledTab key={tab.item} item={tab.item} color={tab.color}>\n                {tab.label}\n              </StyledTab>\n            );\n          })}\n        </StyledTabsList>\n\n        <Introduction\n          introClass={introContent.introClass}\n          vimeoSrc={introContent.vimeoSrc}\n        />\n        <CourseClass {...contentClass} />\n        <Resourses {...resoursesClass} />\n        <Practice {...practiceClass} />\n        <Plan tableConent={planContent} />\n      </Tabs>\n    </ThemeProvider>\n  );\n};\n\nCourse.defaultProps = {\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/522444610',\n    introClass: [\n      {\n        title: 'Tema nuevo',\n        description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo.`,\n        bullets: ['lalaalla', 'Arduino 1'],\n      },\n      {\n        title: 'APRENDIZAJE ESPERADO',\n        description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam `,\n      },\n      {\n        title: `COMPETENCIA QUE \\nSE FAVORECE`,\n        description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo.`,\n        bullets: ['lalaalla', 'Arduino 1'],\n      },\n      {\n        title: `CONTENIDOS \\nTEMÁTICOS`,\n        description: `orem ipsum dolor sit amet, consectetur adipiscing elit.\n        Suspendisse vel vehicula leo. Etiam rhoncus et erat id sagittis.\n        Donec placerat tempus facilisis. Aenean sollicitudin commodo leo,\n        ac feugiat lorem tincidunt nec. Proin dictum risus vel nisl blandit,\n        id tincidunt turpis tristique. Donec sollicitudin scelerisque lorem.`,\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Charla',\n      objective: 'Hablar con el equipo',\n      activitie: 'Precentaciones',\n      material: 'Ninugno',\n      classTime: '12 min',\n    },\n    {\n      theme: 'Revisar equipo',\n      objective: 'verificar el equipo',\n      activitie: 'Entregar y abrir el equipo',\n      material: 'Ninugno',\n      classTime: '12 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Nombre del archivo a descargar',\n    downloadLabel: 'logo_inteligent',\n    pathToDownloadFile: '/assets/logo_desk.png',\n    content: [\n      {\n        title: 'Clase de USO',\n        description: 'Hello',\n      },\n      {\n        title: 'Clase 2',\n        description: 'BLABLA',\n      },\n      {\n        title: 'Prueba',\n        description: 'BLABLA',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Nombre de la practica',\n    time: '01:30 HORA',\n    meterials: ['kit de arduino', 'Laptop', 'Internet', 'componentes'],\n    objective: 'Objectivo de la practica',\n    steps: 'Procedimientos de la practica',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile: '/assets/logo_desk.png',\n      downloadName: 'lodo_inteligent',\n      label: 'Recurso de descargar',\n    },\n    links: [\n      {\n        pathToFile: '/assets/logo_desk.png',\n        downloadName: 'lodo_inteligent',\n        label: 'Link a Lectura',\n      },\n      {\n        pathToFile: '/assets/logo_desk.png',\n        downloadName: 'lodo_inteligent',\n        label: 'Link a Video de Complemento',\n      },\n    ],\n  },\n};\n\nCourse.propTypes = {\n  introContent: shape({\n    vimeoSrc: string,\n    introClass: arrayOf(\n      shape({\n        title: string,\n        description: string,\n      })\n    ),\n  }),\n  planContent: arrayOf(\n    shape({\n      theme: string,\n      objective: string,\n      activitie: string,\n      material: string,\n      classTime: string | number,\n    })\n  ),\n  contentClass: shape({\n    downloadFileName: string,\n    downloadLabel: string,\n    pathToDownloadFile: string,\n    content: arrayOf(\n      shape({\n        title: string,\n        description: element,\n      })\n    ),\n  }),\n  practiceClass: shape({\n    precticeName: string.isRequired,\n    time: string.isRequired,\n    meterials: arrayOf(string).isRequired,\n    objective: string.isRequired,\n    steps: string.isRequired,\n  }),\n  resoursesClass: shape({\n    mainLink: shape({\n      pathToFile: string.isRequired,\n      downloadName: string.isRequired,\n      label: string.isRequired,\n    }),\n    links: arrayOf(\n      shape({\n        pathToFile: string,\n        downloadName: string,\n        label: string,\n      })\n    ),\n  }),\n};\n","export const InteligenciaArtificial = {\n  name: 'Inteligencia Artificial',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/579452513',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'El programa Máquinas Inteligentes se centra en la rama de inteligencia artificial (IA), Machine Learning con Microcontroladores y Edge Impulse . Por lo tanto, es importante que los estudiantes entiendan las capacidades de las herramientas de IA. También es importante que los estudiantes sepan que pueden configurar el sistema y que reconozcan que crearán un proyecto en el programa.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Conocerá los conceptos relacionados con Inteligencia Artificial, la historia a través de los años y sus aplicaciones en nuestra vida cotidiana.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Analiza los cambios históricos de la Inteligencia Artificial en la vida del ser humano y cómo ha afectado su vida, comprende la diferencia entre la inteligencia humana y sus aplicaciones en la ciencia y tecnología.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          '¿Qué es Inteligencia artificial?, Diferencia entre IA y IH, Aplicaciones de IA, Historia de la IA',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Introducción a Máquinas Inteligentes',\n      objective:\n        'Conocer la estructura del programa educativo, los módulos que lo componen y las prácticas a realizar',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador y proyecto de muestra',\n      classTime: '20 min',\n    },\n    {\n      theme: '¿Qué es la inteligencia artificial?',\n      objective: 'Distinguir entre la inteligencia humana y la artificial.',\n      activitie: 'Debate entre las características de IA e IH',\n      material: 'Proyector, computadora, señalador',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Clasificaciones de ciencias de la computación',\n      objective: 'Conocer los subcampos y los tipos de IA',\n      activitie: 'Expositiva',\n      material:\n        'Proyector, computadora, señalador, videos sobre aplicaciones de IA (Recursos)',\n      classTime: '10 min',\n    },\n\n    {\n      theme: 'Cómo aprende una IA',\n      objective: 'Entender el funcionamiento de la IA',\n      activitie: 'Análisis de ejemplo',\n      material:\n        '10 imágenes de una misma especie,  proyector, computadora y señalador',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Historia de la IA en el mundo',\n      objective: 'Conocer las etapas más importantes de la IA en el mundo',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador',\n      classTime: '30 min',\n    },\n\n    {\n      theme: 'Cierre de módulo 1',\n      objective:\n        'Concluir el análisis sobre IA y retroalimentar dudas respecto a la clase.',\n      activitie: 'Comentarios grupales',\n      material:\n        'Aclaración de dudas, entrega de  evaluación de repaso y documento de primera práctica.',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_1',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_1/clase1_inteligencia_artificial.pdf',\n    content: [\n      {\n        videoClass: 'https://player.vimeo.com/video/579449665',\n        title: 'Introducción a Máquinas Inteligentes',\n        description:\n          'En esta clase conocerás la estructura del programa Máquinas Inteligentes.',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/579451859',\n        title: 'Introducción a Inteligencia Artificial?',\n        description:\n          'En esta clase comprenderás los conceptos básicos sobre Inteligencia Artificial.',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/579450320',\n        title: '¿Qué es IA?',\n        description:\n          'En esta clase aprenderás en cual subcampo se encuentra Machine Learning.',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 1',\n    time: '01:30 HORA',\n    meterials: ['Archivo de Contenido para Modulo 1', 'Libreta', 'Lápiz'],\n    objective: 'Comprender los conceptos básicos sobre Inteligencia Artificial',\n    steps:\n      'Para reforzar lo aprendido en las clases es importante que realices el siguiente cuestionario de repaso       ¿Qué es Inteligencia artificial?           ¿Cuál es la diferencia entre la inteligencia humana y la artificial?                 Menciona los subcampos de inteligencia artificial                ¿Que debe de cuidar un desarrollador de inteligencia artificial al realizar sus modelos de aprendizaje?                   Es momento de comenzar a Identificar alguna problemática en tu hogar, colonia, escuela o alguno de los lugares frecuentes. Identifica cual de estos problemas puede ser solucionado desarrollando algún proyecto con Inteligencia Artificial. Se sugiere que durante todo este curso trabajes con esta idea para que al finalizar la lleves a cabo y puedas compartirla con la comunidad de Máquinas Inteligentes, sí en el transcurso prefieres cambiar de proyecto puedes hacerlo.                   Problemática a resolver:                   Ideas para resolver la problemática:                  Puntos claves del problema:                   Datos a analizar:',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_1/ejercicios_modulo1.pdf',\n      downloadName: 'ejercicios_modulo_1',\n      label: 'Práctica 1',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.xataka.com/robotica-e-ia/que-inteligencia-artificial',\n        downloadName: '',\n        label: 'Inteligencia Artificial',\n      },\n      {\n        pathToFile:\n          'https://www.delltechnologies.com/es-es/blog/4-maneras-inteligencia-artificial-revolucionando-educacion/',\n        downloadName: '',\n        label: '4 maneras de la IA revolucionando a la educación',\n      },\n      {\n        pathToFile:\n          'https://www.fundacionbankinter.org/blog/noticia/akademia/-que-esta-aportando-la-inteligencia-artificial-al-mundo-de-la-educacion-',\n        downloadName: '',\n        label: 'Aportes de IA en la educación',\n      },\n      {\n        pathToFile:\n          'https://www.oracle.com/mx/artificial-intelligence/what-is-ai/',\n        downloadName: '',\n        label: '¿Qué es la IA?',\n      },\n    ],\n  },\n};\n","import { InteligenciaArtificial } from './Ai';\nimport { Etica_Resp } from './Etica_resp';\nimport { Machine_learning } from './Ml';\nimport { NuestroKit } from './Kit';\nimport { EdgeImpulse } from './EdgeImp';\nimport { DevCode } from './DevCode';\nimport { Sensor_Temperatura } from './SensTemp';\nimport { Sensor_Rgb } from './Rgb';\nimport { Sensor_Imu } from './SensImu';\nimport { Microphone } from './Microphone';\nimport { VisionArtificial } from './AiVis';\nimport { FinalProject } from './FinalProject';\n// eslint-disable-next-line\nexport default {\n  introduccion_ia: InteligenciaArtificial,\n  etica_responsabilidad: Etica_Resp,\n  tyni_machine_learning: Machine_learning,\n  nuestro_kit: NuestroKit,\n  platforma_edge: EdgeImpulse,\n  programando_codigo: DevCode,\n  sensor_temperatura: Sensor_Temperatura,\n  sensor_color: Sensor_Rgb,\n  sensor_imu: Sensor_Imu,\n  microfono: Microphone,\n  vision_artificial: VisionArtificial,\n  curso_final: FinalProject,\n};\n","export const Etica_Resp = {\n  name: 'Ética y responsabilidades',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/579467860',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Analizar los problemas que enfrenta la tecnología de inteligencia artificial actualmente y conocer las organizaciones que regulan el uso de esta tecnología. Adoptar un enfoque en materia de IA centrado en el ser humano, que tenga como objetivo reorientar el debate para incluir la función de la IA en la lucha contra las desigualdades actuales en materia de acceso al saber, a la investigación y a la diversidad de las expresiones culturales, y para que la IA no acentúe las diferencias tecnológicas entre los países y dentro de estos. La promesa de “la IA para todos” debe permitir que cada persona pueda sacar provecho de la revolución tecnológica en curso y acceder a sus beneficios, fundamentalmente en materia de innovación y saber.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Conocerá las responsabilidades que tienen los desarrolladores de algoritmos de IA y creadores de tecnología que apliquen estos algoritmos para resolver problemas aplicados a la vida del ser humano. ',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Comprende los retos a los que se enfrentan los desarrolladores de esta tecnología y la responsabilidad que tienen con la sociedad. Analiza los riesgos de una tecnología aplicada a las diferentes actividades y áreas de la vida del ser humano.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Ética y responsabilidades de la IA, Organizaciones que regulan esta tecnología y riesgos de aplicar IA con datos sesgados.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Limites Eticos de IA',\n      objective: 'Conocer los límites éticos de la IA con la vida humana.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora y señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Responsabilidades de la IA',\n      objective:\n        'Analizar y comprender las responsabilidades que tienen los desarrolladores de esta tecnología',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora y señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Los 4 puntos a discusión de la IA',\n      objective:\n        'Debatir los 4 puntos que se encuentran en punto crítico sobre la IA.',\n      activitie:\n        'Forma 4 equipos en la clase, cada equipo tendrá un punto crítico de la IA, cada equipo propondrá alguna solución.',\n      material: 'Proyector, computadora y señalador',\n      classTime: '30 min',\n    },\n\n    {\n      theme: 'Organizaciones que regulan la IA en el mundo',\n      objective:\n        'Conocer las organizaciones que tienen como responsabilidad mantener la tecnología dentro de los límites éticos para obtener una mejor calidad de vida para todos.',\n      activitie:\n        'Buscar los objetivos de la agenda 2030 y  realizar una lluvia de ideas sobre cómo la IA puede mejorar los objetivos de esta tomando en cuenta la ética y responsabilidades. Leer la carta de la UNESCO redactada en la reunión de la ONU.',\n      material: 'Proyector, computadora, señalador, cartulina, marcadores',\n      classTime: '50 min',\n    },\n    {\n      theme: 'IA para todos',\n      objective: 'Generar conciencia sobre el uso de IA en nuestra vida.',\n      activitie:\n        'Generar una conclusión sobre cómo afectará nuestra IA en la vida del ser humano y que aspectos debe de cuidar en todo momento.',\n      material: 'Proyector, computadora, señalador',\n      classTime: '30 min',\n    },\n\n    {\n      theme: 'Cierre de módulo 2',\n      objective:\n        'Analizar si se tiene que tener en consideración algún punto crítico de la IA en el proyecto final.',\n      activitie:\n        'Descargar el material de la clase, contestar la práctica del módulo y resolver dudas por parte del instructor',\n      material: 'Evaluación de repaso',\n      classTime: '30 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_2',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_2/modulo2_etica_responsabilidades_de_ia.pdf',\n    content: [\n      {\n        videoClass: 'https://player.vimeo.com/video/581279931',\n        title: 'Límites éticos y responsabilidades de la IA',\n        description:\n          'En esta clase conocerás cuales son los límites éticos y las responsabilidades que tiene la tecnología de Inteligencia Artificial con la responsabilidad',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 2',\n    time: '01:30 HORA',\n    meterials: ['Archivo de Contenido para Modulo 2', 'Libreta', 'Lápiz'],\n    objective:\n      'Comprender y analizar cuales son los puntos éticos que debe de reforzar la IA antes de realizar un proyecto',\n    steps:\n      'Descargar el material del Modulo 2 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_2/ejercicios_modulo2.pdf',\n      downloadName: 'ejercicios_modulo_2',\n      label: 'Práctica 2',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://es.unesco.org/themes/tic-educacion/inteligencia-artificial',\n        downloadName: '',\n        label: 'La Inteligencia Artificial en la Educación',\n      },\n      {\n        pathToFile: 'https://www.moralmachine.net/hl/es',\n        downloadName: '',\n        label: 'Máquina Moral Plataforma de perspectiva',\n      },\n      {\n        pathToFile:\n          'https://tec.mx/es/noticias/guadalajara/investigacion/inteligencia-artificial-y-etica-tec-y-jalisco-las-impulsan-en',\n        downloadName: '',\n        label: 'Inteligencia artificial y ética',\n      },\n      {\n        pathToFile:\n          'https://www.thinkingheads.com/latam/tendencia-global/robotica-inteligencia-artificial-etica-debate/',\n        downloadName: '',\n        label: 'Debate sobre IA',\n      },\n      {\n        pathToFile:\n          'https://opendialogueonai.com/wp-content/uploads/2020/07/ES_Delib.pdf',\n        downloadName: '',\n        label:\n          'Pensar la inteligencia artificial responsable: una guía de deliberación',\n      },\n    ],\n  },\n};\n","export const Machine_learning = {\n  name: 'Machine Learning',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/581350611',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Conocer el subcampo de la inteligencia artificial “Machine learning”, entender los principios básicos de funcionamiento y las clasificaciones. Entender que es Tiny Machine Learning y porque se aplica en dispositivos embebidos y la importancia de conocer los diferentes tipos de datos que se pueden adquirir con el Kit de este programa educativo.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Conocerá la diferencia entre Machine Learning y Tiny ML, los principios básicos de funcionamiento de esta tecnología, la importancia de entender los diferentes tipos de información que puede procesar  y la calidad de los datos que debe de introducir al sistema de aprendizaje.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Entiende que es Tiny Machine Learning y cómo se aplica en dispositivos embebidos, conoce los diferentes tipos de datos que se manejan en los microcontroladores y la importancia de introducir información correcta al sistema de aprendizaje.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Machine Learning, Tiny Machine Learning, dispositivos embebidos, Dato analógico, dato digital y análisis de datos.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: '¿Qué es Machine Learning?',\n      objective: 'Entender como funciona esta tecnologia.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora y señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Métodos de Machine Learning',\n      objective: 'Conocer los algoritmos y diferentes clasificaciones de ML',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora y señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Aplicaciones de Machine Learning',\n      objective:\n        'Conocer algunos ejemplos de la aplicación de esta tecnología.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora y señalador',\n      classTime: '15 min',\n    },\n\n    {\n      theme: 'Tiny Machine Learning',\n      objective:\n        'Entender en qué momento se aplica esta tecnología y cómo se aplica en las actividades del ser humano.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador, cartulina, marcadores',\n      classTime: '15 min',\n    },\n    {\n      theme:\n        'Conocimientos necesarios para desarrollar algoritmos de Tiny Machine Learning',\n      objective:\n        'Analizar las diferentes ciencias y asignaturas que giran alrededor de esta tecnología.',\n      activitie:\n        'Analizar la estructura académica de cada ciencia que integra Tiny ML y debatir sobre los conocimientos que el desarrollador debe de dominar.',\n      material: 'Proyector, computadora, señalador',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Análisis de datos',\n      objective:\n        'Saber que es el análisis de datos y porque juega un papel fundamental en la IA.',\n      activitie:\n        'Observar los dispositivos electrónicos que se tienen alrededor y analizar el tipo de información que envía y las magnitudes físicas que se pueden medir del mundo real.',\n      material: '',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Tipos de datos',\n      objective:\n        'Entender los diferentes tipos de datos que se manejan en la IA.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Proceso de funcionamiento de Tiny Machine Learning',\n      objective:\n        'Analizar el proceso de funcionamiento y cada etapa del aprendizaje automatizado.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'Recolectando Información',\n      objective:\n        'Conocer los diferentes casos que se presentan al recolectar información en un sistema de aprendizaje.',\n      activitie: 'Expositiva',\n      material: 'Proyector, computadora, señalador',\n      classTime: '15 min',\n    },\n    {\n      theme: 'El perceptrón',\n      objective:\n        'Realizar un ejemplo del funcionamiento de un perceptrón y conocer sus partes que lo integran.',\n      activitie:\n        'Realizar un ejemplo similar al de la explicación del perceptrón con diferentes pesos y peso del umbral.',\n      material: 'Proyector, computadora, señalador',\n      classTime: '40 min',\n    },\n    {\n      theme: 'Cierre de clase',\n      objective: 'Concluir sobre Tiny ML y el análisis de datos.',\n      activitie:\n        'Resolver dudas del módulo y realizar la práctica del material de la clase.',\n      classTime: '30 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_3',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_3/modulo3_machine_learning_analisis_de_datos.pdf',\n    content: [\n      {\n        title: 'Machine Learning',\n        description:\n          'En esta clase conocerás los conceptos básicos del subcampo de Machine Learning.',\n        videoClass: 'https://player.vimeo.com/video/585137845',\n      },\n      {\n        title: 'Tiny Machine Learning',\n        description:\n          'En esta clase aprenderás los puntos fuertes de Machine Learning en dispositivos embebidos',\n        videoClass: 'https://player.vimeo.com/video/585137845',\n      },\n      {\n        title: 'Análisis de datos',\n        description:\n          'En esta clase aprenderás los diferentes tipos de datos que se manejan en los dispositivos embebidos, características de la recolección de datos y estrategias para el análisis de datos',\n        videoClass: 'https://player.vimeo.com/video/585137845',\n      },\n      {\n        title: 'Perceptron',\n        description:\n          'En esta clase conocerás que es un perceptrón de manera breve y aprenderás la estructura de funcionamiento con un ejemplo sencillo.',\n        videoClass: 'https://player.vimeo.com/video/585137845',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 3',\n    time: '01:30 HORA',\n    meterials: ['Archivo de Contenido para Modulo 3', 'Libreta', 'Lápiz'],\n    objective: 'Comprender los conceptos básicos sobre Inteligencia Artificial',\n    steps:\n      'Descargar el material del Modulo 3 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_3/ejercicios_modulo3.pdf',\n      downloadName: 'ejercicios_modulo_3',\n      label: 'Práctica 3',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.bbva.com/es/machine-learning-que-es-y-como-funciona/',\n        downloadName: '',\n        label: 'Machine Learning ¿Qué es? ¿Comó funciona?',\n      },\n      {\n        pathToFile: 'https://www.ibm.com/mx-es/analytics/machine-learning',\n        downloadName: '',\n        label: 'Machine Learning',\n      },\n      {\n        pathToFile: 'https://www.aprendemachinelearning.com/',\n        downloadName: '',\n        label: 'Aprende Machine Learning',\n      },\n      {\n        pathToFile: 'https://www.tinyml.org/',\n        downloadName: '',\n        label: 'Tiny Machine Learning',\n      },\n      {\n        pathToFile: 'https://www.arm.com/blogs/blueprint/tinyml',\n        downloadName: '',\n        label: 'ARM Tiny Machine Learning',\n      },\n    ],\n  },\n};\n","export const NuestroKit = {\n  name: 'Nuestro Kit',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/583026107',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Conocer la tarjeta de desarrollo Arduino Nano 33 BLE sense, los sensores que tiene integrada, el módulo de cámara y el shield de Tiny Machine Learning. Entender el funcionamiento básico de cada sensor e interpretar su hoja de datos. ',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Conocer los componentes de la tarjeta de desarrollo Nano 33 BLE Sense, entender cómo funcionan los sensores y qué tipo de datos recolecta.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Comprende el funcionamiento básico de los microcontroladores integrados en una tarjeta de desarrollo, identifica la función de utilizar Arduino IDE y conoce el proceso de instalación de la tarjeta en el entorno de desarrollo.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Microcontroladores, Arduino, Programación en C, lectura de hoja de datos.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Conociendo el kit',\n      objective:\n        'Identificar cada una de los componentes del kit y conocer su funcionamiento.',\n      activitie:\n        'El alumno recibirá un kit e identificará cada una de sus partes y su funcionamiento en el programa.',\n      material: 'Kit Arduino Tiny Machine Learning',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Los sensores',\n      objective: 'Identificar el tipo de sensor y cómo funciona.',\n      activitie:\n        'El alumno identificará de la hoja de datos los puntos más importantes de cada sensor que contiene la tarjeta de desarrollo.',\n      material: 'Hoja de datos de cada sensor',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Instalando Arduino IDE y la tarjeta Nano 33 BLE Sense',\n      objective:\n        'Instalar de manera correcta las dependencias para el funcionamiento del kit.',\n      activitie:\n        'El instructor enseñará al alumno la correcta instalación del software Arduino IDE y la tarjeta Nano 33 BLE Sense.',\n      material: 'Arduino IDE, Computadora y Kit Arduino Tiny Machine Learning',\n      classTime: '20 min',\n    },\n    {\n      theme: 'Mi primer ejemplo',\n      objective:\n        'Desarrollar el código para la lectura de los sensores del Kit.',\n      activitie:\n        'El alumno desarrollará el código para mostrar en el monitor serie el valor del sensor propuesto por el instructor.',\n      material: 'Arduino IDE, Computadora y Kit Arduino Tiny Machine Learning',\n      classTime: '15 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_4',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_4/modulo4_nuestro_kit.pdf',\n    content: [\n      {\n        videoClass: 'https://player.vimeo.com/video/583005910',\n        title: 'Conociendo el Kit Tiny Machine Learning',\n        description:\n          'En esta clase conocerás cada componente que integra el Kit de tiny Machine Learning y el tipo de sensor integrado a la tarjeta',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/583021936',\n        title:\n          'Instalando Arduino IDE y el paquete de la tarjeta Nano 33 BLE Sense',\n        description:\n          'En esta clase aprenderás a instalar correctamente Arduino IDE y el paquete de la tarjeta Nano 33 BLE Sense',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/583021936',\n        title: 'Mi primer ejemplo',\n        description:\n          'En esta clase aprenderás a cargar el primer ejemplo en tu tarjeta Nano 33 BLE Sense',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 4',\n    time: '02:30 HORA',\n    meterials: [\n      'Arduino Kit Tiny Machine Learning',\n      'Archivo de Contenido para Modulo 4',\n      'Libreta',\n      'Lápiz',\n    ],\n    objective: '',\n    steps: '',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_4/ejercicios_modulo4.pdf',\n      downloadName: 'ejercicios_modulo_4',\n      label: 'Práctica 4',\n    },\n    links: [\n      {\n        pathToFile: 'https://www.arduino.cc/',\n        downloadName: '',\n        label: 'Página Arduino Oficial',\n      },\n      {\n        pathToFile: 'https://store.arduino.cc/usa/tiny-machine-learning-kit',\n        downloadName: '',\n        label: 'Página del Kit oficial',\n      },\n      {\n        pathToFile: 'https://store.arduino.cc/usa/nano-33-ble-sense',\n        downloadName: '',\n        label: 'Página de la tarjeta de desarrollo Arduino',\n      },\n      {\n        pathToFile:\n          'https://www.youtube.com/watch?v=eBVvD85Ml2c&list=PLkjnQ3NFTPnY1eNyLDGi547gkVui1vyn2',\n        downloadName: '',\n        label: 'Videos curso de programación con Arduino',\n      },\n    ],\n  },\n};\n","export const EdgeImpulse = {\n  name: 'Edge Impulse',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/583044059',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Aprender a utilizar la plataforma de Edge Impulse Studio para generar el aprendizaje automático de información recolectada con un smartphone desde el sensor de micrófono y el acelerómetro.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Aprenderá la función de cada sección de Edge Impulse, utilizar bloques de funciones para el aprendizaje de clasificación de los datos y a conectar un smartphone con la plataforma de desarrollo.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Conoce el uso de cada función de Edge Impulse para el aprendizaje de datos y la manera correcta de vincular un smartphone con la plataforma.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Machine Learning, Red Neuronal, Aprendizaje reforzado, Edge Impulse, Filtro de datos, Clasificación de datos, Análisis de datos.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Edge Impulse',\n      objective: 'Conocer la plataforma de entrenamiento de datos Edge Impulse',\n      activitie:\n        'El instructor mostrará al grupo el funcionamiento de la plataforma Edge Impulse y cada una de las funciones de entrenamiento.',\n      material: 'Computadora, proyector y apuntador',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Funciones básicas',\n      objective:\n        'Comprender cada función de esta plataforma para crear tu primer impulso.',\n      activitie:\n        'El instructor explicará cada una de las funciones y secciones de Edge Impulse. ',\n      material: 'Computadora, proyector, apuntador y conexión a internet.',\n      classTime: '40 min',\n    },\n    {\n      theme: 'Conectando un dispositivo',\n      objective:\n        'Conectar un smartphone con la plataforma para realizar el primer proyecto.',\n      activitie:\n        'El instructor enseñará al alumno la correcta instalación del software Arduino IDE y la tarjeta Nano 33 BLE Sense.',\n      material: 'Arduino IDE, Computadora y Kit Arduino Tiny Machine Learning',\n      classTime: '20 min',\n    },\n    {\n      theme: 'Creando mi primer impulso',\n      objective:\n        'Aplicar los conocimientos adquiridos en una práctica utilizo un Smartphone para adquirir información de algún sensor.',\n      activitie:\n        'El grupo realizará la lectura de información del micrófono y la registrará en Edge Impulse para crear un impulso identificando las palabras Si, No y Silencio. ',\n      material:\n        'Computadora, proyector, apuntador, conexión a internet y smartphone',\n      classTime: '40 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_5',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_5/modulo5_edge_impulse.pdf',\n    content: [\n      {\n        title: 'Edge Impulse',\n        description:\n          'En esta clase conocerás la plataforma de Edge Impulse y su funcionamiento',\n      },\n      {\n        title: 'Funciones Básicas',\n        description:\n          'En esta clase aprenderás cada una de las funciones en edge impulse, bloques de aprendizaje y parámetros para realizar un impulso de aprendizaje. ',\n      },\n      {\n        title: 'Conectando un dispositivo',\n        description:\n          'En esta clase aprenderás a conectar un smartphone con Edge Impulse e identificar cuáles otros dispositivos son compatibles con la plataforma.',\n      },\n      {\n        title: 'Creando mi primer impulso',\n        description:\n          'En esta clase aprenderás a crear tu primer impulso con Edge Impulse utilizando el micrófono o acelerómetro integrados en tu Smartphone.',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 5',\n    time: '02:30 HORA',\n    meterials: [\n      'Usuario a Edge Impulse',\n      'Smart Phone',\n      'Archivo de Contenido para Modulo 5',\n      'Libreta',\n      'Lápiz',\n    ],\n    objective: 'Reforzar lo aprendido en las clases del módulo',\n    steps:\n      'Descargar el material del Modulo 5, contestar las preguntas de refuerzo de lección y desarrollar la práctica propuesta',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_5/ejercicios_modulo5.pdf',\n      downloadName: 'ejercicios_modulo_5',\n      label: 'Práctica 5',\n    },\n    links: [\n      {\n        pathToFile: 'https://www.edgeimpulse.com/',\n        downloadName: '',\n        label: 'Página oficial Edge Impulse',\n      },\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=JrpTmHGJ97A',\n        downloadName: '',\n        label: 'Ejemplo usando Edge Impulse',\n      },\n      {\n        pathToFile: 'https://docs.edgeimpulse.com/docs',\n        downloadName: '',\n        label: 'Manual de uso Edge Impulse (inglés)',\n      },\n    ],\n  },\n};\n","export const DevCode = {\n  name: 'Programando nuestro código',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/579486254',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Realizar de manera correcta la instalación de dependencias para enviar la información de la tarjeta Nano 33 BLE Sense a Edge Impulse Studio para realizar la clasificación de los datos.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Comunicar de manera correcta a Edge Impulse con la tarjeta Nano 33 BLE Sense la captura de información de los sensores. ',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Se comunicará entre distintas plataformas o entornos de programación.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Programación con Arduino, Edge Impulse, análisis de datos.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Instalando Edge CLI',\n      objective:\n        'Conocer el proceso correcto de la instalación de dependencias para comunicar los datos adquiridos por la tarjeta Nano 33 BLE Sense a Edge Impulse.',\n      activitie:\n        'El instructor enseñará la correcta instalación de las dependencias para comunicar la tarjeta Nano 33 BLE Sense con Edge Impulse Studio.',\n      material:\n        'Proyector, Computadora, Software descargado:, Node.js, Arduino CLI, Python 3, Edge CLI y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Nuestro primer programa con el Kit en Arduino IDE',\n      objective:\n        'Comprender el formato que recibe Edge Impulse y realizar el primer ejemplo con el grupo.',\n      activitie: `El instructor realizará el primer ejemplo explicando al grupo la manera correcta en la que debe de mandarse la información de los sensores a Edge Impulse.\n     Práctica: El alumno desarrollará el código para leer la información de algún sensor diferente al del ejemplo.,\n      material: 'Kit Tiny Machine Learning, Computadora y Conexión a internet`,\n      classTime: '40 min',\n    },\n    {\n      theme: 'Enviando nuestra información a Edge Impulse',\n      objective:\n        'Enviar la información recolectada a través de los sensores del kit a Edge Impulse para registrar la información y posteriormente hacer un Impulso.',\n      activitie:\n        'El instructor realizará el primer ejemplo explicando al grupo la manera correcta en la que debe Impulse. Práctica: El alumno realizará la recolección de información y la clasificará.',\n      material: 'Kit Tiny Machine Learning, Computadora y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_6',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_6/modulo6_programando_nuestro_codigo.pdf',\n    content: [\n      {\n        vimeoSrc: 'https://player.vimeo.com/video/579484299',\n        title: 'Instalando Edge Impulse CLI',\n        description:\n          'En esta clase aprenderás a instalar correctamente Edge Impulse CLI para comunicar tu Kit con el estudio.',\n      },\n      {\n        vimeoSrc: 'https://player.vimeo.com/video/579484299',\n        title: 'Nuestro primer programa con el Kit en Arduino IDE',\n        description:\n          'En esta clase aprenderás a desarrollar el código para enviar la información de los sensores de la tarjeta Nano 33 BLE Sense a Edge Impulse Studio en el formato correcto.',\n      },\n      {\n        vimeoSrc: 'https://player.vimeo.com/video/579484299',\n        title: 'Enviando nuestra información a Edge Impulse',\n        description:\n          'En esta clase comprenderás la manera de enviar la información a Edge Impulse Studio de la tarjeta Nano 33 BLE Sense.',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: '',\n    time: '',\n    meterials: [''],\n    objective: '',\n    steps: '',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile: 'https://www.arduino.cc/', // esto es para descargar no para redirigir, por que la pagina de arduino\n      downloadName: '',\n      label: 'Página oficial Arduino',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.ibm.com/docs/es/elm/6.0.3?topic=files-csv-file-format-examples',\n        downloadName: '',\n        label: 'Link de lectura',\n      },\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=2v8U9fc2Z9k',\n        downloadName: '',\n        label: 'Video para aprender a programar con Arduino',\n      },\n    ],\n  },\n};\n","export const Sensor_Temperatura = {\n  name: 'Sensor de temperatura',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/579490011',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Desarrollar el código para adquirir la temperatura y la humedad relativa del sensor integrado en la tarjeta Nano 33 BLE Sense, realizar la recolección de información en Edge Impulse y crear un impulso para clasificar los datos.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Programará de manera correcta la lectura del sensor de temperatura en la tarjeta de desarrollo utilizando Arduino IDE, Generará el formato de datos en CSV para enviar a Edge Impulse y crear un impulso nuevo.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Programación de microcontroladores con Arduino IDE y análisis de datos con aprendizaje automático con Edge Impulse.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Analisis de datos.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Lectura del sensor de temperatura',\n      objective:\n        'Comprender la programación de la tarjeta de desarrollo para adquirir la información del sensor de temperatura. ',\n      activitie:\n        'El instructor realizará el ejemplo de lectura del sensor, mostrando y explicando cada parte del código.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Envío de información a Edge Impulse',\n      objective:\n        'Recopilar información del sensor, crear etiquetas de clasificación y analizar la información recolectada.',\n      activitie:\n        'Los alumnos tomarán las muestras de información de los sensores en Edge Impulse creando por lo menos 3 etiquetas: Frío-Caliente-Templado.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Creando un impulso',\n      objective:\n        'Generar el aprendizaje automático de la información recolectada.',\n      activitie:\n        'El instructor explicará el proceso de creación del impulso con edge Impulse Studio y resolverá dudas a los alumnos.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Práctica',\n      objective: 'Reforzar el aprendizaje del módulo.',\n      activitie:\n        'Los alumnos realizarán los ejercicios propuestos en el documento en contenido descargable.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_7',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_7/modulo7_sensor_temperatura.pdf',\n    content: [\n      {\n        title: 'Lectura del sensor de temperatura',\n        description:\n          'En esta clase aprenderás a desarrollar el código de lectura del sensor de temperatura.',\n      },\n      {\n        title: 'Envío de información a Edge Impulse',\n        description:\n          'En esta clase aprenderás a enviar la información del sensor de lectura a Edge Impulse y registrarla con etiquetas.',\n      },\n      {\n        title: 'Creando un impulso',\n        description:\n          'En esta clase desarrollarás un impulso de aprendizaje automático clasificando la información del sensor en 3 categorías de datos',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 7',\n    time: '03:30 HORA',\n    meterials: [\n      'Archivo de Contenido para Modulo 7',\n      'Kit Tiny Machine Learning',\n      'Edge Impulse Estudio',\n    ],\n    objective:\n      'Comprender como funciona el sensor de temperatura al programar con Arduino IDE y su libreria',\n    steps:\n      'Descargar el material del Modulo 7 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/tree/main/Modulo_7',\n      downloadName: '',\n      label: 'Carpeta del módulo 7',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.ibm.com/docs/es/elm/6.0.3?topic=files-csv-file-format-examples',\n        downloadName: '',\n        label: 'Video estructura de un programa en Arduino',\n      },\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=2v8U9fc2Z9k',\n        downloadName: '',\n        label: 'Video estructura de un programa en Arduino',\n      },\n      {\n        pathToFile: 'https://www.picuino.com/es/arduprog/sensor-temp.html',\n        downloadName: '',\n        label: 'Lectura como funciona un Sensor de temperatura',\n      },\n    ],\n  },\n};\n","export const Sensor_Rgb = {\n  name: 'Sensor RGB',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/522444610',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Desarrollar el código para adquirir los valores RGB de diferentes objetos del sensor integrado en la tarjeta Nano 33 BLE Sense, realizar la recolección de información en Edge Impulse y crear un impulso para clasificar los datos.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Programará de manera correcta la lectura del sensor RGB en la tarjeta de desarrollo utilizando Arduino IDE, Generará el formato de datos en CSV para enviar a Edge Impulse y crear un impulso nuevo.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Programación de microcontroladores con Arduino IDE y análisis de datos con aprendizaje automático con Edge Impulse.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Análisis de datos, sensor RGB',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Lectura del sensor RGB',\n      objective:\n        'Comprender la programación de la tarjeta de desarrollo para adquirir la información del sensor RGB',\n      activitie:\n        'El instructor realizará el ejemplo de lectura del sensor, mostrando y explicando cada parte del código.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Envío de información a Edge Impulse',\n      objective:\n        'Recopilar información del sensor, crear etiquetas de clasificación y analizar la información recolectada.',\n      activitie:\n        'Los alumnos tomarán las muestras de información de los sensores en Edge Impulse creando por lo menos 3 etiquetas de diferente color.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Creando un impulso',\n      objective:\n        'Generar el aprendizaje automático de la información recolectada.',\n      activitie:\n        'El instructor explicará el proceso de creación del impulso con edge Impulse Studio y resolverá dudas a los alumnos.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Práctica',\n      objective: 'Reforzar el aprendizaje del módulo.',\n      activitie:\n        'Los alumnos realizarán los ejercicios propuestos en el documento en contenido descargable.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_8',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile: '',\n    content: [\n      {\n        title: 'Lectura del sensor RGB',\n        description:\n          'En esta clase aprenderás a desarrollar el código de lectura del sensor RGB.',\n      },\n      {\n        title: 'Envío de información a Edge Impulse',\n        description:\n          'En esta clase aprenderás a enviar la información del sensor de lectura a Edge Impulse y registrarla con etiquetas.',\n      },\n      {\n        title: 'Creando un impulso',\n        description:\n          'En esta clase desarrollarás un impulso de aprendizaje automático clasificando la información del sensor en 3 categorías de datos',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: '',\n    time: '',\n    meterials: [''],\n    objective: '',\n    steps: '',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://www.ibm.com/docs/es/elm/6.0.3?topic=files-csv-file-format-examples',\n      downloadName: '',\n      label: 'Lectura formato CSV',\n    },\n    links: [\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=2v8U9fc2Z9k',\n        downloadName: '',\n        label: 'Video estructura de un programa en Arduino',\n      },\n    ],\n  },\n};\n","export const Sensor_Imu = {\n  name: 'Sensor IMU',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/522444610',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Desarrollar el código para adquirir los valores del acelerómetro, giroscopio y magnetómetro del sensor IMU integrado en la tarjeta Nano 33 BLE Sense, realizar la recolección de información en Edge Impulse y crear un impulso para clasificar los datos.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Programará de manera correcta la lectura del sensor IMU en la tarjeta de desarrollo utilizando Arduino IDE, Generará el formato de datos en CSV para enviar a Edge Impulse y crear un impulso nuevo.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Programación de microcontroladores con Arduino IDE y análisis de datos con aprendizaje automático con Edge Impulse.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Análisis de datos, sensor IMU',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Lectura del sensor IMU',\n      objective:\n        'Comprender la programación de la tarjeta de desarrollo para adquirir la información del sensor IMU',\n      activitie:\n        'El instructor realizará el ejemplo de lectura del sensor, mostrando y explicando cada parte del código.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Envío de información a Edge Impulse',\n      objective:\n        'Recopilar información del sensor, crear etiquetas de clasificación y analizar la información recolectada.',\n      activitie:\n        'Los alumnos tomarán las muestras de información de los sensores en Edge Impulse creando por lo menos 3 etiquetas de diferente movimiento.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Creando un impulso',\n      objective:\n        'Generar el aprendizaje automático de la información recolectada.',\n      activitie:\n        'El instructor explicará el proceso de creación del impulso con edge Impulse Studio y resolverá dudas a los alumnos.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Práctica',\n      objective: 'Reforzar el aprendizaje del módulo.',\n      activitie:\n        'Los alumnos realizarán los ejercicios propuestos en el documento en contenido descargable.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_9',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile: '',\n    content: [\n      {\n        title: 'Lectura del sensor IMU',\n        description:\n          'En esta clase aprenderás a desarrollar el código de lectura del sensor RGB.',\n      },\n      {\n        title: 'Envío de información a Edge Impulse',\n        description:\n          'En esta clase aprenderás a enviar la información del sensor de lectura a Edge Impulse y registrarla con etiquetas.',\n      },\n      {\n        title: 'Creando un impulso',\n        description:\n          'En esta clase desarrollarás un impulso de aprendizaje automático clasificando la información del sensor en 3 categorías de datos',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: '',\n    time: '',\n    meterials: [''],\n    objective: '',\n    steps: '',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://www.ibm.com/docs/es/elm/6.0.3?topic=files-csv-file-format-examples',\n      downloadName: '',\n      label: 'Lectura formato CSV',\n    },\n    links: [\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=2v8U9fc2Z9k',\n        downloadName: '',\n        label: 'Video estructura de un programa en Arduino',\n      },\n    ],\n  },\n};\n","export const Microphone = {\n  name: 'Micrófono',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/583127009',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Desarrollar el código para adquirir los valores del micrófono integrado en la tarjeta Nano 33 BLE Sense, realizar la recolección de información en Edge Impulse y crear un impulso para clasificar los datos.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Programará de manera correcta la lectura de los datos del micrófono que está integrado en la tarjeta de desarrollo utilizando Arduino IDE, Generará el formato de datos en CSV para enviar a Edge Impulse y crear un impulso nuevo.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Programación de microcontroladores con Arduino IDE y análisis de datos con aprendizaje automático con Edge Impulse.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Análisis de datos, Microfono',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Lectura del micrófono',\n      objective:\n        'Comprender la programación de la tarjeta de desarrollo para adquirir la información del micrófono',\n      activitie:\n        'El instructor realizará el ejemplo de lectura del sensor, mostrando y explicando cada parte del código.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Envío de información a Edge Impulse',\n      objective:\n        'Recopilar información del sensor, crear etiquetas de clasificación y analizar la información recolectada.',\n      activitie:\n        'Los alumnos tomarán las muestras de información de los sensores en Edge Impulse creando por lo menos 3 etiquetas de diferentes palabras.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Creando un impulso',\n      objective:\n        'Generar el aprendizaje automático de la información recolectada.',\n      activitie:\n        'El instructor explicará el proceso de creación del impulso con edge Impulse Studio y resolverá dudas a los alumnos.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Práctica',\n      objective: 'Reforzar el aprendizaje del módulo.',\n      activitie:\n        'Los alumnos realizarán los ejercicios propuestos en el documento en contenido descargable.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_10',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_10/modulo10_microfono.pdf',\n    content: [\n      {\n        title: 'Lectura del micrófono',\n        description:\n          'En esta clase aprenderás a desarrollar el código de lectura del sensor RGB.',\n      },\n      {\n        title: 'Envío de información a Edge Impulse',\n        description:\n          'En esta clase aprenderás a enviar la información del sensor de lectura a Edge Impulse y registrarla con etiquetas.',\n      },\n      {\n        title: 'Creando un impulso',\n        description:\n          'En esta clase desarrollarás un impulso de aprendizaje automático clasificando la información del sensor en 3 categorías de datos',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 10',\n    time: '03:30 HORA',\n    meterials: [\n      'Archivo de Contenido para Modulo 10',\n      'Kit Tiny Machine Learning',\n      'Edge Impulse',\n    ],\n    objective:\n      'Comprender el funcionamiento de microfono integrado en la tarjeta Nano 33 BLE Sense utilizando la libreria PDM',\n    steps:\n      'Descargar el material del Modulo 10 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/tree/main/Modulo_10',\n      downloadName: '',\n      label: 'Carpeta del módulo 10',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.ibm.com/docs/es/elm/6.0.3?topic=files-csv-file-format-examples',\n        downloadName: '',\n        label: 'Lectura formato CSV',\n      },\n      {\n        pathToFile: 'https://www.youtube.com/watch?v=2v8U9fc2Z9k',\n        downloadName: '',\n        label: 'Video estructura de un programa en Arduino',\n      },\n    ],\n  },\n};\n","export const VisionArtificial = {\n  name: 'Visión Artificial',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/583131776',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Comprender qué es la visión artificial, cuál es la información que se adquiere en una muestra de imagen, que es el procesamiento de imágenes y cómo funciona el código para adquirir imágenes utilizando el kit de machine learning y la plataforma de Teachable Machine.',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Entenderá los conceptos básicos sobre procesamiento de imágenes, conocerá cuál es la información leída de una imagen y sabrá utilizar las plataformas para su registro, entrenamiento y desarrollo del código de programación.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description:\n          'Programación de visión artificial con microcontroladores en Arduino IDE y procesamiento de imágenes.',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Análisis de datos, procesamiento de imágenes.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Introducción al procesamiento de imágenes',\n      objective:\n        'Comprender que es el procesamiento de imágenes,  leer la información de una imagen y aprender a utilizar el shield Tiny Machine Learning',\n      activitie:\n        'El instructor dará la explicación sobre qué es el procesamiento de imágenes, cómo entiende el procesador la información de una imagen y cómo funcionará el kit para la captura de imágenes.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Mi primer ejemplo con Teachable Machine',\n      objective:\n        'Aprender a utilizar la plataforma de aprendizaje automático Teachable Machine con Arduino y el Kit Tiny Machine Learning',\n      activitie:\n        'El instructor realizará el primer ejemplo con la plataforma de aprendizaje automático y el alumno realizará la clasificación de la información que obtendrá a través de la cámara de su kit.',\n      material: 'Kit Machine Learning, Computadora y Arduino IDE',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Exportando proyecto a Arduino IDE',\n      objective:\n        'Aprender a exportar proyectos de Teachable Machine a Arduino IDE',\n      activitie:\n        'El instructor enseñará al grupo a exportar el proyecto en Teachable Machine  y explicará brevemente el funcionamiento del programa.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '30 min',\n    },\n    {\n      theme: 'Práctica',\n      objective: 'Reforzar el aprendizaje del módulo.',\n      activitie:\n        'Los alumnos realizarán los ejercicios propuestos en el documento en contenido descargable.',\n      material:\n        'Kit Machine Learning, Computadora, Edge Impulse y Conexión a internet',\n      classTime: '60 min',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_11',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_11/modulo11_visi%C3%B3n_artificial.pdf',\n    content: [\n      {\n        videoClass: 'https://player.vimeo.com/video/583127902',\n        title: 'Introducción al procesamiento de imágenes',\n        description:\n          'En esta clase aprenderás los conceptos básicos sobre procesamiento de miagenes para visión artificial.',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/583127902',\n        title: 'Mi primer ejemplo con Teachable Machine',\n        description:\n          'En esta clase aprenderás a utilizar la plataforma Teachable Machine para aprendizaje automático de imágenes',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/583127902',\n        title: 'Exportando proyecto a Arduino IDE',\n        description:\n          'En esta clase desarrollarás el código para realizar un proyecto de visión artificial tomando como base el aprendizaje de la plataforma Teachable Machine.',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Conceptos de repaso Modulo 11',\n    time: '03:30 HORA',\n    meterials: [\n      'Archivo de Contenido para Modulo 11',\n      'Kit Tiny Machine Learning',\n      'Teachable Machine',\n    ],\n    objective:\n      'Comprender el funcionamiento del módulo cámara con la tarjeta Nano 33 BLE Sense utilizando Teachable Machine',\n    steps:\n      'Descargar el material del Modulo 11 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/tree/main/Modulo_11',\n      downloadName: '',\n      label: 'Carpeta Módulo 11',\n    },\n    links: [\n      {\n        pathToFile: 'https://teachablemachine.withgoogle.com/',\n        downloadName: '',\n        label: 'Teachable Machine página principal',\n      },\n      {\n        pathToFile: '',\n        downloadName: '',\n        label: 'Video aprendiendo Teachable Machine',\n      },\n    ],\n  },\n};\n","export const FinalProject = {\n  // Completar toda la informacion.\n  name: 'Proyecto Final',\n  introContent: {\n    vimeoSrc: 'https://player.vimeo.com/video/581311411',\n    introClass: [\n      {\n        title: 'Objetivo',\n        description:\n          'Desarrollar un proyecto utilizando los conocimientos adquiridos en este programa educativo',\n        bullets: [],\n      },\n      {\n        title: 'Aprendizaje esperado',\n        description:\n          'Entenderá la estructura básica para documentar proyectos y aplicará los conocimientos de Machine Learning.',\n      },\n      {\n        title: 'Competencia que favorece',\n        description: 'Desarrollo de proyectos con Tiny Machine Learning',\n        bullets: [],\n      },\n      {\n        title: 'Contenidos temáticos',\n        description:\n          'Arduino IDE, Microcontroladores, Sensores, Comunicación I2C, Edge Impulse, Análisis de datos, procesamiento de imágenes.',\n      },\n    ],\n  },\n  planContent: [\n    {\n      theme: 'Documentación del proyecto',\n      objective: 'Aprender a documentar cada etapa del proyecto ',\n      activitie:\n        'El instructor enseñará la estructura básica para documentar un proyecto de tecnología y realizarán el llenado de la información dependiendo del proyecto que cada quien escogió.',\n      material: 'Computadora, hojas y bolígrafo',\n      classTime: ' 480 min',\n    },\n    {\n      theme: 'Desarrollo del proyecto',\n      objective:\n        'Desarrollar el prototipo del proyecto, realizar pruebas correspondientes y analizar los resultados finales',\n      activitie:\n        'El instructor orientará al grupo para que tengan éxito en el desarrollo de su proyecto final.',\n      material: 'Depende de las necesidades del alumno y el proyecto',\n      classTime: '600 min',\n    },\n    {\n      theme: 'Presentación de proyecto',\n      objective:\n        'Presentar al grupo el resultado final del proyecto, prototipo, aplicación y análisis de resultados.',\n      activitie: 'Cada alumno o equipo presentará su proyecto en clase',\n      material: 'Prototipo, proyector y computadora',\n      classTime: '50 minutos por presentación',\n    },\n  ],\n  contentClass: {\n    downloadFileName: 'Contenido_Módulo_12',\n    downloadLabel: 'Descarga el material para impartir esta clase',\n    pathToDownloadFile:\n      'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_12/formato_proyecto%20final.pdf',\n    content: [\n      {\n        videoClass: 'https://player.vimeo.com/video/581310554',\n        title: 'Mi proyecto final',\n        description:\n          'En esta clase se explicará en qué consiste el desarrollo de tu proyecto final, se explicará cada una de las partes que debe de contener la estructura del documento del proyecto.',\n      },\n      {\n        videoClass: 'https://player.vimeo.com/video/581310554',\n        title: 'Otto Cat',\n        description:\n          'En esta clase se explicará en qué consiste el desarrollo de tu proyecto final, se explicará cada una de las partes que debe de contener la estructura del documento del proyecto.',\n      },\n    ],\n  },\n  practiceClass: {\n    precticeName: 'Proyecto final Módulo 12',\n    time: '06:00 HORA',\n    meterials: [\n      'Archivo de Contenido para Modulo 12',\n      'Kit Tiny Machine Learning',\n      'Teachable Machine',\n      'Edge Impulse',\n      'Arduino IDE',\n    ],\n    objective:\n      'Desarrollar un proyecto final utilizando lo aprendido en Máquinas Inteligentes',\n    steps:\n      'Descargar el material del Modulo 12 y completar la información con relación a tu proyecto',\n  },\n  resoursesClass: {\n    mainLink: {\n      pathToFile:\n        'https://github.com/ElectronicCats/ejemplos-maquinas-inteligentes/raw/main/Modulo_12/formato_proyecto%20final.pdf',\n      downloadName: 'practica_modulo12',\n      label: 'Práctica Modulo 12',\n    },\n    links: [\n      {\n        pathToFile:\n          'https://www.randstad.es/tendencias360/desarrollo-de-proyectos/',\n        downloadName: '',\n        label: 'Conceptos básicos para el desarrollo de proyectos',\n      },\n      {\n        pathToFile: 'http://dicyg.fi-c.unam.mx:8080/lalo/aed/fases',\n        downloadName: '',\n        label: 'Conceptos básicos para el desarrollo de proyectos de software',\n      },\n    ],\n  },\n};\n","import React from 'react';\nimport { string } from 'prop-types';\n// import { CURSES_CARDS } from '../../consts/courses/CardList';\nimport { RoundSpan } from '../Buttons/styles';\nimport { ContainerTitle } from '../UI/Content';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const IconStiledNav = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  width: 40px;\n  border-radius: 50px;\n  margin: 5px;\n  font-size: ${({ size }) => (size ? size + 'em' : 'initial')};\n  background: ${({ bgColor }) => (bgColor ? bgColor : 'var(--highligth)')};\n  color: ${({ color }) => (color ? color : 'var(--main-fnt-color)')};\n`;\n\nexport const CourseNav = ({ currentTitle, navNext, navPrev }) => {\n  return (\n    <RoundSpan bgColor={'linear-gradient(var(--gradient));'} color='white'>\n      {navPrev ? (\n        <IconStiledNav\n          bgColor={'var(--color-orange)'}\n          color='white'\n          size='1.5'\n          to={navPrev}\n        >\n          {'<'}\n        </IconStiledNav>\n      ) : null}\n      <ContainerTitle color={'white'} size='1.2'>\n        {currentTitle}\n      </ContainerTitle>\n      {navNext ? (\n        <IconStiledNav\n          bgColor={'var(--color-orange)'}\n          color='white'\n          size='1.5'\n          to={navNext}\n        >\n          {'>'}\n        </IconStiledNav>\n      ) : null}\n    </RoundSpan>\n  );\n};\n\nCourseNav.defaultProps = {\n  currentTitle: 'Title',\n};\nCourseNav.propTypes = {\n  currentTitle: string,\n  navNext: string,\n  navPrev: string,\n};\n","import { useEffect, useState } from 'react';\n\nimport { CURSES_CARDS } from '../consts/courses/CardList';\n\nconst getItemBy = (param) => (array, value) =>\n  array.find((elment) => elment[param] === value);\nconst getItemById = getItemBy('id');\n\nconst getIndexBy = (param) => (array, value) =>\n  array.findIndex((elment) => elment[param] === value);\nconst getIndexById = getIndexBy('id');\n\nconst getCourseNameById = (idValue) => {\n  let item = getItemById(CURSES_CARDS, idValue);\n  return item.couseName;\n};\nconst getPrevCourseId = (idCurrent) => {\n  let len = CURSES_CARDS.length;\n  let currentIndex = getIndexById(CURSES_CARDS, idCurrent);\n  //  previous Item\n  let item = CURSES_CARDS[(currentIndex + len - 1) % len];\n  return item.id;\n};\nconst getNextCourseId = (idCurrent) => {\n  let len = CURSES_CARDS.length;\n  let currentIndex = getIndexById(CURSES_CARDS, idCurrent);\n  // next item;\n  let item = CURSES_CARDS[(currentIndex + 1) % len];\n  return item.id;\n};\n\nexport const useCarrucelCourseNav = (classId) => {\n  const [title, setTitle] = useState('');\n  const [nexCoursePath, setNextCoursePath] = useState(null);\n  const [prevCoursePath, setprevCoursePath] = useState(null);\n\n  useEffect(() => {\n    setTitle(getCourseNameById(classId));\n    setNextCoursePath(`/class/${getNextCourseId(classId)}`);\n    setprevCoursePath(`/class/${getPrevCourseId(classId)}`);\n  }, [classId]);\n  return {\n    title,\n    nexCoursePath,\n    prevCoursePath,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/thanks_laptop.dcc71a5b.svg\";","export default __webpack_public_path__ + \"static/media/logo_arduino.41d5f395.svg\";","export default __webpack_public_path__ + \"static/media/logo_hacedores.30f9fb2b.svg\";","export default __webpack_public_path__ + \"static/media/logo_ilce.3438e483.svg\";","import { Home } from './Home';\nimport { Courses } from './Courses';\nimport { Cvmap } from './Cvmap';\nimport { Workshops } from './Workshops';\nimport { NotFound } from './NotFound';\nimport { ContactUs } from './ContactUs';\nimport { About } from './About';\nimport { StartGuide } from './StartGuide';\n// import { EdgeImpulse } from './EdgeImpulse';\nimport { Objective } from './Objective';\nimport { CoursesDetails } from './CoursesDetails';\nimport { Thanks } from './Thanks';\n\nexport const routes = [\n  {\n    path: '/class/:classId',\n    component: CoursesDetails,\n  },\n  {\n    path: '/nosotros',\n    name: 'Nosotros',\n    component: About,\n  },\n  {\n    path: '/objetivo',\n    name: 'Objetivo',\n    component: Objective,\n  },\n  {\n    path: '/guia_de_arranque',\n    name: 'Guia de Arranque',\n    component: StartGuide,\n  },\n  {\n    path: '/curso',\n    name: 'Curso',\n    component: Courses,\n  },\n  {\n    path: '/talleristas',\n    name: 'Red de Talleristas',\n    component: Workshops,\n  },\n  {\n    path: '/mapa-curicular',\n    name: 'Mapa Curricular',\n    component: Cvmap,\n  },\n  {\n    path: '/contacto',\n    component: ContactUs,\n    name: 'Contacto',\n  },\n  {\n    path: '/thanks',\n    component: Thanks,\n    name: 'Agradecemos',\n  },\n  // {\n  //   path: '/edge_impulse',\n  //   name: 'Edge Impulse',\n  //   component: EdgeImpulse,\n  // },\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n  },\n  {\n    path: '*',\n    component: NotFound,\n  },\n];\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport { RoundLink } from '../../components/Buttons/styles';\nimport { Container, ContainerTitle } from '../../components/UI/Content';\nimport { Course } from '../../components/Course';\nimport COURSES from '../../consts/courses';\nimport { CourseNav } from '../../components/CourseNav';\nimport { useCarrucelCourseNav } from '../../hooks/useCarrucelCourse';\n\nexport const CoursesDetails = ({\n  // eslint-disable-next-line\n  match: {\n    // eslint-disable-next-line\n    params: { classId },\n  },\n}) => {\n  const { title, nexCoursePath, prevCoursePath } =\n    useCarrucelCourseNav(classId);\n  return (\n    <AppLayout>\n      <Container>\n        <ContainerTitle>\n          <CourseNav\n            currentTitle={title}\n            navNext={nexCoursePath}\n            navPrev={prevCoursePath}\n          />\n        </ContainerTitle>\n        <div style={{ margin: '25px 0' }}>\n          <RoundLink\n            bgColor={'var(--color-pink);'}\n            color='white'\n            href='https://store.arduino.cc/usa/tiny-machine-learning-kit'\n            target='_blank'\n          >\n            Adquiere tu Kit Aquí\n          </RoundLink>\n        </div>\n        <Course {...COURSES[classId]} />\n      </Container>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport logo_microchip from '../../assets/logo_microchip.svg';\nimport {\n  Container,\n  ContainerTitle,\n  ContainerP,\n} from '../../components/UI/Content';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { BlueContainer } from '../../components/BlueContainer';\nimport { CenterDiv } from '../../styles/GlobalStyles';\n\nexport const About = () => {\n  return (\n    <AppLayout>\n      <section>\n        <Container>\n          <CardGrids align='center' justify='center' cardSize='350px'>\n            <ContainerTitle size='5'>Nosotros</ContainerTitle>\n            <img\n              src={logo_microchip}\n              alt='us mircrochip'\n              style={{ width: '350px' }}\n            />\n          </CardGrids>\n          <CardGrids>\n            <article>\n              <ContainerP size='1.3'>\n                Máquinas inteligentes es un programa educativo, para desarrollar\n                habilidades interpretativas de lectura de información, obtenida\n                a través de los sensores en dispositivos embebidos\n                (Microcontroladores), utilizando una interfaz amigable de\n                programación que permite utilizarla sin ser un experto en\n                programación o inteligencia artificial.\n              </ContainerP>\n              <ContainerP size='1.3'>\n                Este programa consta de 12 módulos, donde los interesados\n                aprenden a desarrollar un modelo de aprendizaje con inteligencia\n                artificial utilizando a Edge Impulse y Arduino IDE como\n                herramienta para programación.\n              </ContainerP>\n            </article>\n            <article>\n              <ContainerP size='1.3'>\n                Este programa puede ser tomado por cualquier alumno y/o\n                replicado por profesores de educación media superior en\n                adelante, que busquen introducirse en el mundo de la\n                inteligencia artificial sin ser un experto en programación o\n                matemáticas.\n              </ContainerP>\n              <ContainerP size='1.3'>\n                Esperamos que quien tome este taller online se comprometa a\n                compartir el conocimiento con nuevas generaciones de su plantel,\n                comunidad o colegas, para de esta manera tener continuidad en el\n                taller fomentando la curiosidad por la ciencia y la tecnología.\n              </ContainerP>\n            </article>\n          </CardGrids>\n          <ContainerP>\n            <i>\n              Este taller fue posible gracias al apoyo y participación de\n              distintas organizaciones y asociaciones como: Kybernus, Arduino\n              Education y Electronic Cats.\n            </i>\n          </ContainerP>\n        </Container>\n        <BlueContainer>\n          <CenterDiv>\n            <iframe\n              id='my_frame'\n              title='my vid'\n              src='https://player.vimeo.com/video/583649919'\n              frameBorder='0'\n              allow='autoplay; fullscreen'\n              allowFullScreen\n              style={{\n                width: '100%',\n                minWidth: '340px',\n                maxWidth: '640px',\n                height: '564px',\n              }}\n            ></iframe>\n          </CenterDiv>\n        </BlueContainer>\n      </section>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport obj_trasn from '../../assets/devices/obj_trasn.svg';\nimport objetivos_cards from '../../assets/objetivos_cards.svg';\nimport objetivos_grafica from '../../assets/objetivos_grafica.svg';\nimport objetivos_sam from '../../assets/sam/objetivos-sam.svg';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { TopContainer } from '../../components/GradientContainer';\nimport {\n  ContainerTitle,\n  Container,\n  ContainerP,\n  ContalinerList,\n} from '../../components/UI/Content';\nimport { ThanksCard } from '../../components/ClassCard/ThanksCard';\nimport { CardGrids } from '../../components/UI/Cards';\n\nexport const Objective = () => {\n  return (\n    <AppLayout>\n      <section>\n        <TopContainer>\n          <CenterDiv direction='row'>\n            <ContainerTitle size={4} color='#fff'>\n              {`OBJETIVOS`}\n            </ContainerTitle>\n            <img src={obj_trasn} alt='Sam' style={{ width: '300px' }} />\n          </CenterDiv>\n        </TopContainer>\n        <Container>\n          <ContainerTitle size={2} align='left'>\n            OBJETIVO GENERAL\n          </ContainerTitle>\n          <ContainerP size={1.3}>\n            El programa Máquinas Inteligentes se centra en la ciencia de\n            inteligencia artificial (IA) y el subcampo de Machine Learning con\n            el microcontrolador NRF52840 (Kit de Arduino Tiny Machine Learning)\n            y la plataforma de Edge Impulse . Introducir a alumnos de 16 años en\n            adelante con conocimientos previos en programación de\n            microcontroladores con Arduino IDE y profesores de nivel educativo\n            media superior en adelante, en el mundo de Tiny Machine Learning.\n            Mostrar a la próxima generación de profesionistas las aplicaciones\n            de las especialidades de Ciencia de datos e Inteligencia Artificial\n            para fomentar alguna de las carreras relacionadas con ciencia y\n            tecnología. La demanda de esta profesión en el año 2030 será\n            demasiada, para países como México será difícil proveer la cantidad\n            de profesionistas que demandará esta carrera es por eso que Maquinas\n            Inteligentes tiene como objetivo atraer a más personas en el\n            aprendizaje de este subcampo de las ciencias de la computación.\n          </ContainerP>\n          <ContainerTitle size={2} align='left'>\n            OBJETIVOS PARTICULARES\n          </ContainerTitle>\n          <ContalinerList color='var(--color-green)'>\n            <li>\n              Entender el funcionamiento de la inteligencia artificial en\n              nuestros dispositivos.\n            </li>\n            <li>\n              Conocer la Ética y responsabilidades de la inteligencia artificial\n            </li>\n            <li>\n              Generar conciencia de la responsabilidad, limitaciones y\n              planificación a futuro de la inteligencia artificial.\n            </li>\n            <li>\n              Entender cómo funciona el análisis de datos en nuestra vida\n              actual.\n            </li>\n            <li>Desarrollar una red neuronal de aprendizaje.</li>\n            <li>\n              Entender el funcionamiento de aprendizaje de dispositivos.\n              embebidos\n            </li>\n            <li>Utilizar la plataforma Edge Impulse para Machine Learning.</li>\n            <li>\n              Aprender, mediante la experimentación científica sobre análisis de\n              datos en dispositivos embebidos con múltiples sensores tales como:\n              Giroscopio, Magnetómetro, Acelerómetro, colorimetría, temperatura,\n              humedad y presión atmosférica.\n            </li>\n            <li>\n              Programar dispositivos embebidos con Arduino IDE y Edge Impulse.\n            </li>\n          </ContalinerList>\n          <img\n            src={objetivos_cards}\n            alt='Cards'\n            style={{ width: '80%', minWidth: '340px' }}\n          />\n          <CardGrids direction='row'>\n            <ThanksCard\n              description={`Los cientificos ganan 7 Veces mas que un ingeniero`}\n              imgsrc={objetivos_grafica}\n              title={'oportunidad de crecimiento'}\n            />\n            <CardGrids direction='row'>\n              <ContalinerList>\n                <li>Mejor Calidad de Vida</li>\n                <li>Procesos Automatizados</li>\n                <li>Seguridad Eficiente</li>\n                <li>Atencion al Cliente</li>\n                <li>Resolucion de Problemas Complejos</li>\n              </ContalinerList>\n              <img\n                src={objetivos_sam}\n                alt={'Sam objective'}\n                style={{ width: '300px' }}\n              />\n            </CardGrids>\n          </CardGrids>\n        </Container>\n      </section>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport samStand from '../../assets/sam/sam-stand.svg';\nimport { ContainerP, ContaineFexDiv } from '../../components/UI/Content';\nimport { ExplainCard } from '../../components/ExplainCard';\nimport { ImagesGrids } from '../../components/Devices';\n\nexport const StartGuide = () => {\n  return (\n    <AppLayout>\n      <>\n        <ContaineFexDiv direction='row'>\n          <article>\n            <img src={samStand} alt='Sam ' style={{ width: '300px' }} />\n          </article>\n          <article style={{ maxWidth: '850px' }}>\n            <ContainerP>\n              Máquinas Inteligentes es un programa educativo, para desarrollar\n              habilidades interpretativas de lectura de información, obtenida\n              atreves de los sensores en dispositivos embebidos\n              (Microcontroladores), utilizando una interfaz amigable de\n              programación que permite utilizarla sin ser un experto en\n              programación y/o matemáticas.\n            </ContainerP>\n            <ExplainCard\n              title='Guia de Arranque'\n              color='var(--color-blue)'\n              descriptions={`Máquinas inteligentes tiene el objetivo de introducirte\n               en la ciencia de datos y de desarrollar habilidades y competencias básicas\n               para la solución de problemas,creatividad, \n              todo esto con la aplicación de conceptos de electrónica, \n              programación e inteligencia artificial.`}\n            />\n          </article>\n        </ContaineFexDiv>\n        <ContaineFexDiv direction='row'>\n          <article>\n            <ImagesGrids />\n          </article>\n          <article style={{ maxWidth: '850px' }}>\n            <ExplainCard\n              title='¿PARA Quién VA DIRIGIDO?'\n              color='var(--color-green)'\n              descriptions={`Este curso está dirigido a participantes de 16\n              años en adelante o que estén cursando alguna\n              carrera técnica, bachillerato o preparatoria y\n              que cuente con conocimientos básicos sobre \n              programación y electrónica.`}\n            />\n            <ExplainCard\n              title='Actividades'\n              color='var(--color-pink)'\n              bullets={[\n                `Sesiones de aprendizaje teórico con videos,\n                lecturas y ejércitos prueba`,\n                'Actividades técnicas: Programación, electrónica y análisis de datos.',\n                'Evaluación diagnostica, intermedia y final del curso.',\n                'Elaboración de un cuaderno de trabajo con evidencias y análisis.',\n                'Proyecto Final documentado.',\n                'Compartir con la comunidad',\n              ]}\n            />\n            <ExplainCard\n              title='Recursos Necesarios'\n              color='var(--color-orange)'\n              bullets={[\n                `Salon para llevar a acabo el taller\n                (con computadora y proyector).`,\n                `Computadoras y mesas de trabajo para los asistentes.`,\n                `smartphone con Android.`,\n                `Kit para Curso.`,\n                `Materiales para cada actividad\n                (la lista se encuentra en cada clase).`,\n              ]}\n            />\n          </article>\n        </ContaineFexDiv>\n      </>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nimport red_sam from '../../assets/sam/red-sam.svg';\nimport { AppLayout } from '../../components/AppLayout';\nimport { TopContainer } from '../../components/GradientContainer';\nimport { ContainerTitle } from '../../components/UI/Content';\nimport { WorkshopCard } from '../../components/UI/Cards';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { WORKSHOPS } from '../../consts/Workshops';\n\nexport const Workshops = () => {\n  return (\n    <AppLayout>\n      <TopContainer>\n        <CenterDiv direction='row'>\n          <img src={red_sam} alt='Sam' style={{ width: '200px' }} />\n          <ContainerTitle size={4} color='#fff'>\n            {`Red de \\nTalleristas`}\n          </ContainerTitle>\n        </CenterDiv>\n        {WORKSHOPS.map((worker) => (\n          <WorkshopCard key={worker.id}>\n            <a target='_blank' href={worker.page} rel='noreferrer'>\n              <img src={worker.imagePath} alt={worker.title} />\n            </a>\n            {worker.description}\n          </WorkshopCard>\n        ))}\n      </TopContainer>\n    </AppLayout>\n  );\n};\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\n\nimport { AppLayout } from '../../components/AppLayout';\nimport { GradientContainerRound } from '../../components/GradientContainer';\nimport { ContainerTitle, ContainerP } from '../../components/UI/Content';\nimport { Table } from '../../components/Tables';\n\nexport const Cvmap = () => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Sesión',\n        accessor: 'session',\n      },\n      {\n        Header: 'Objetivo',\n        accessor: 'objective',\n      },\n      {\n        Header: 'Aprendizaje \\nEsperado',\n        accessor: 'learn',\n      },\n      {\n        Header: 'Competencia \\nque se \\nFavorecce',\n        accessor: 'upper',\n      },\n      {\n        Header: 'Contenidos \\nTemáticos',\n        accessor: 'themes',\n      },\n      {\n        Header: 'Materias \\nVinculadas',\n        accessor: 'materia',\n      },\n    ],\n    []\n  );\n  const data = React.useMemo(\n    () => [\n      {\n        session: 'Introducción',\n        objective:\n          'Conocer la finalidad del curso, su relación con la tecnología actual en dispositivos móviles y plataformas y la responsabilidad y obligaciones que tiene el científico de datos.',\n        learn:\n          'Conocer la diferencia entre Inteligencia Artificial e Inteligencia Humana, los campos de IA y las responsabilidades y obligaciones que se tiene al desarrollar esta tecnología.',\n        visits:\n          'Reconoce los diferentes tipos de inteligencias y las herramientas que se utilizan en la actualidad para generar modelos inteligentes aplicados a plataformas y dispositivos móviles.',\n        upper:\n          'Inteligencia Artificial, Campos de IA, Ejemplos de IA en la actualidad, Valores y Etica de IA, Responsabilidades de IA y El futuro de IA',\n        themes: 'Desarrollo de pensamiento computacional',\n        materia: 'Ciencias de la computación y Programación',\n      },\n      {\n        session: 'Límites éticos y responsabilidades de IA',\n        objective:\n          'Aprender cuales son los problemas a los que se enfrenta la Inteligencia Artificial al estar presente con los seres humanos, que debe de mejorar en cuanto a ética antes de estar 100% presente en nuestros días y que responsabilidades tienen los desarrolladores de esta tecnología.',\n        learn:\n          'Conocer los límites éticos a los que se enfrenta hoy en día la IA y las responsabilidades que tienen los desarrolladores de esta tecnología con la sociedad.',\n        visits:\n          'Entiende los diferentes casos que se han presentado de discriminación en las pruebas con IA y las responsabilidades que enfrenta el desarrollo de esta tecnologia.',\n        upper:\n          'Límites Éticos de IA, Casos de mal desarrollo de IA y IA en la Educación',\n        themes: 'Desarrollo humano',\n        materia:\n          'Civica y ética, Historia del desarrollo humano y la tecnología',\n      },\n      {\n        session: 'Machine Learning',\n        objective:\n          'Analizar la aplicación de algoritmos de Machine Learning en diferentes ejemplos y entender su funcionamiento en el área de análisis de datos.',\n        learn:\n          'Conocer el subcampo de Machine Learning en dispositivos embebidos',\n        visits:\n          'Conoce los diferentes tipos de Machine learning y sus usos en el análisis de datos',\n        upper:\n          'Machine Learning, Algoritmos, Red Neuronal Artificial, Como aprende el ser humano y Análisis de datos',\n        themes:\n          'Inteligencia Artificial, Análisis de datos, Selección de datos, Reconocimiento de patrones y Aplicación de modelos predictivos',\n        materia: 'Programación, Análisis de datos y Matemáticas',\n      },\n      {\n        session: 'Nuestro Kit',\n        objective:\n          'Identificar cada uno de los componentes del kit Arduino Tiny Machine Learning.',\n        learn:\n          'Conocer cada uno de los componentes que componen el kit e identificar cada uno de los sensores que vienen integrados a la tarjeta de desarrollo Nano 33 BLE Sense',\n        visits:\n          'Identifica componentes electrónicos y conoce los sensores integrados para temperatura, presión atmosférica, RGB, acelerómetro, giroscopio, magnetómetro, micrófono y cámara.',\n        upper:\n          'Electrónica, tarjetas de desarrollo, Arduino y microcontroladores',\n        themes: 'Arduino, microcontroladores y electrónica',\n        materia: 'Electrónica, Sistemas embebidos y Programación ',\n      },\n      {\n        session: 'Edge Impulse',\n        objective:\n          'Conocer sobre Tiny ML en dispositivos embebidos y la plataforma propuesta',\n        learn:\n          'Analizar la plataforma Edge Impulse y su comunicación con dispositivos embebidos',\n        visits:\n          'Compara datos mediante el uso de condicionales, los analiza y emite resoluciones a un problema dado',\n        upper:\n          'Programación visual, análisis de adquisición de datos, análisis de gráficas de estadística y aplicación de filtros',\n        themes:\n          'Uso de herramientas de explotación de datos , análisis de gráficas, probabilidad y estadística, reconocimiento de patrones, configuración matemática y análisis estadístico, implementación de interfaces de programación',\n        materia:\n          'Programación, Análisis de datos, Modelado Mátematico, Probabilidad y Estadística',\n      },\n      {\n        session: 'Programando nuestro código',\n        objective:\n          'Aprender a conectar el kit del curso a la interfaz de programación Arduino IDE y Edge Impulse',\n        learn:\n          'Conectar de manera correcta la tarjeta de desarrollo y la plataforma de machine learning Edge Impulse',\n        visits:\n          'Comprende la conexión entre la tarjeta de desarrollo y la plataforma en línea Edge Impulse',\n        upper:\n          'Programación de microcontroladores, entradas y salidas, analógicas y digitales, instalación de librerías, comunicación de tarjeta de desarrollo',\n        themes:\n          'Microcontroladores, electrónica, programación C y lectura de hoja de datos de componentes electrónicos',\n        materia:\n          'Programación, Análisis de datos, Electronica y Sistemas Embebidos',\n      },\n      {\n        session: 'Sensor de temperatur, humedad y sensor de presión',\n        objective:\n          'Entender el funcionamiento del sensor para conocer la temperatura, humedad y presión en el ambiente.',\n        learn:\n          'Entiende el funcionamiento de un sensor por comunicación I2C y la discretización de valores analógicos a digitales.',\n        visits:\n          'Utiliza e incorpora nociones de electrónica y Tiny ML a proyectos complejos.',\n        upper:\n          'Adquisión de datos de sensor analogico atravez de comunicación I2C',\n        themes: 'Selección de datos ',\n        materia:\n          'Programación, Análisis de datos, Electronica, Modelado Mátematico, Probabilidad y Estadística y Sistemas Embebidos',\n      },\n      {\n        session: 'Sensor de Luz, Color y Aproximación',\n        objective:\n          'Entender los valores del sensor APDS9960 para reconocmiento de color RGB, cantidad de luz y aproximación',\n        learn:\n          'Entiende el funcionamiento de un sensor por comunicación I2C y la discretización de valores analógicos a digitales.',\n        visits:\n          'Utiliza e incorpora nociones de electrónica y Tiny ML a proyectos complejos.',\n        upper:\n          'Adquisión de datos de sensor analogico atravez de comunicación I2C',\n        themes: 'Selección de datos ',\n        materia:\n          'Programación, Análisis de datos, Electronica, Modelado Mátematico, Probabilidad y Estadística y Sistemas Embebidos',\n      },\n      {\n        session: 'Sensor IMU',\n        objective:\n          'Entender el funcionamiento de los sensores Acelerómetro, Magnetómetro y Giroscopio para la posición y movimiento de un cuerpo.',\n        learn:\n          'Entiende el funcionamiento de un sensor por comunicación I2C y la discretización de valores analógicos a digitales.',\n        visits:\n          'Utiliza e incorpora nociones de electrónica y Tiny ML a proyectos complejos.',\n        upper:\n          'Adquisición de datos de sensor analogico de 3 ejes a través de comunicación I2C',\n        themes: 'Selección de datos',\n        materia:\n          'Programación, Análisis de datos, Electronica, Modelado Mátematico, Probabilidad y Estadística y Sistemas Embebidos',\n      },\n      {\n        session: 'Micrófono',\n        objective:\n          'Entender el funcionamiento del micrófono IMP34DT05 y los valores recibidos en audio.',\n        learn:\n          'Entiende el funcionamiento de un sensor por comunicación I2C y la discretización de valores analógicos a digitales.',\n        visits:\n          'Utiliza e incorpora nociones de electrónica y Tiny ML a proyectos complejos.',\n        upper: 'Adquisición de datos de sensor ',\n        themes: 'Selección de datos ',\n        materia:\n          'Programación, Análisis de datos, Electronica, Modelado Mátematico, Probabilidad y Estadística y Sistemas Embebidos',\n      },\n      {\n        session: 'Visión artificial',\n        objective:\n          'Aprender a utilizar el módulo de cámara utilizando la plataforma de Teachables Machine.',\n        learn:\n          'Comprende el funcionamiento de visión artificial y cómo entrenar con machine learning la identificación de objetos',\n        visits:\n          'Utiliza e incorpora aprendizaje de visión artificial  en proyectos simples.',\n        upper: 'Adquisición de datos por cámara.',\n        themes: 'Selección de datos ',\n        materia:\n          'Programación, Análisis de datos, Electronica, Modelado Mátematico, Probabilidad, Visión Artificial y Estadística y Sistemas Embebidos',\n      },\n      {\n        session: 'Prácticas',\n        objective: 'Resolver un problema implementando Tiny Machine Learning',\n        learn:\n          'Resuelve problemáticas usando los conocimientos de programación, circuitos, uso de motores, actuadores y mecanismos..',\n        visits:\n          'Resuelve problemas complejos implementando procesos tecnológicos aprendidos.',\n        upper:\n          'Trabajo en equipo, pensamiento crítico, planificación, programación, innovación, electrónica.',\n        themes: '',\n      },\n      {\n        session: 'Proyecto final',\n        objective:\n          'Elabora un proyecto para la solución de una problemática de salud, ambiental, mecánica, alimenticia o social.',\n        learn:\n          'Trabaja en equipo, construye prototipos, testea el funcionamiento de un modelo de Tiny ML  y desarrolla el pensamiento crítico.',\n        visits:\n          'Desarrolla la capacidad de planificar tareas, organizar el trabajo en equipo y gestionar los recursos para la generación del proyecto final.',\n        upper:\n          'Trabajo en equipo, pensamiento crítico, planificación, programación, innovación, electrónica.',\n        themes: '',\n        materia: 'Desarrollo de proyectos',\n      },\n    ],\n    []\n  );\n\n  return (\n    <AppLayout>\n      <>\n        <GradientContainerRound>\n          <ContainerTitle color='#fff' size='5'>\n            Mapa curicular\n          </ContainerTitle>\n          <ContainerP>\n            A continuación se presenta el temario del programa Máquinas\n            Inteligentes y la vinculación que tienen con las asignaturas a nivel\n            Bachillerato o Nivel Medio Superior, los contenidos temáticos, Ejes,\n            Temas, Competencias que se favorecen y Aprendizajes esperados.\n            Máquinas Inteligentes busca alinearse al currículum escolar mediante\n            la construcción de modelos de Machine Learning.\n          </ContainerP>\n          <ContainerP>\n            Desarrolla habilidades y capacidades del siglo XXI.\n          </ContainerP>\n        </GradientContainerRound>\n        <Table columns={columns} data={data} />\n      </>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nimport thanks_laptop from '../../assets/thanks/thanks_laptop.svg';\nimport logo_arduino from '../../assets/thanks/logo_arduino.svg';\nimport logo_hacedores from '../../assets/thanks/logo_hacedores.svg';\nimport logo_ilce from '../../assets/thanks/logo_ilce.svg';\nimport logo_kybernus from '../../assets/logos/logo-kybernus.svg';\nimport { AppLayout } from '../../components/AppLayout';\nimport { CrossBarContainer } from '../../components/GradientContainer';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { Container, ContainerTitle } from '../../components/UI/Content';\nimport { ThanksCard } from '../../components/ClassCard/ThanksCard';\nimport { CardGrids } from '../../components/UI/Cards';\n\nexport const Thanks = () => {\n  return (\n    <AppLayout>\n      <CrossBarContainer>\n        <CenterDiv>\n          <img\n            src={thanks_laptop}\n            alt='thanks laptop'\n            style={{ width: '100%', minWidth: '340px', maxWidth: '640px' }}\n          />\n        </CenterDiv>\n      </CrossBarContainer>\n      <Container>\n        <ContainerTitle size='2'>\n          De la manera mas cordial queremos agradecer el apoyo proporcionado por\n        </ContainerTitle>\n        <CardGrids style={{ margin: '20px 0', gap: '2rem 1rem' }}>\n          <ThanksCard imgsrc={logo_arduino} description={''} />\n          <ThanksCard imgsrc={logo_hacedores} description={''} />\n          <ThanksCard imgsrc={logo_ilce} description={''} />\n          <ThanksCard imgsrc={logo_kybernus} description={''} />\n        </CardGrids>\n      </Container>\n    </AppLayout>\n  );\n};\n","import React from 'react';\nimport logo from '../../assets/logo_desk.svg';\nimport chips from '../../assets/devices/chips.svg';\nimport samKit from '../../assets/sam/sam-kit.svg';\nimport { AppLayout } from '../../components/AppLayout';\nimport {\n  Container,\n  ContainerTitle,\n  ContainerOrderList,\n  ContainerP,\n} from '../../components/UI/Content';\nimport { CardGrids } from '../../components/UI/Cards';\nimport { BlueContainer } from '../../components/BlueContainer';\nimport {\n  GradientContainer,\n  GradientContainerCircle,\n} from '../../components/GradientContainer';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport { RoundLink } from '../../components/Buttons/styles';\n\nexport const Home = () => {\n  return (\n    <AppLayout>\n      <section>\n        <GradientContainerCircle>\n          <>\n            <CardGrids>\n              <img src={chips} alt='chips' />\n              <Container>\n                <CenterDiv>\n                  <img src={logo} alt='maquinas inteligentes' />\n                  <ContainerTitle color='var(--color-blue)'>\n                    Curso de Tiny Machine Learning y Análisis de datos\n                  </ContainerTitle>\n                  <p style={{ color: 'black', textAlign: 'center' }}>\n                    Máquinas Inteligentes es un programa educativo, para\n                    desarrollar habilidades interpretativas de lectura de\n                    información, obtenida a través de los sensores en\n                    dispositivos embebidos (Microcontroladores), utilizando una\n                    interfaz amigable de programación que permite utilizarla sin\n                    ser un experto en programación y/o matemáticas.\n                  </p>\n                </CenterDiv>\n              </Container>\n            </CardGrids>\n          </>\n        </GradientContainerCircle>\n        <BlueContainer>\n          <>\n            <ContainerTitle color='var(--color-green)' size='3'>\n              Objetivos\n            </ContainerTitle>\n            <CardGrids>\n              <ContainerOrderList type='1' color='var(--color-green)'>\n                <li>\n                  Entender el funcionamiento de la inteligencia artificial en\n                  nuestros dispositivos.\n                </li>\n                <li>\n                  Conocer la Ética y responsabilidades de la inteligencia\n                  artificial.\n                </li>\n                <li>\n                  Generar conciencia de la responsabilidad, limitaciones y\n                  planificación a futuro de la inteligencia artificial.\n                </li>\n                <li>\n                  Entender cómo funciona el análisis de datos en nuestra vida\n                  actual.\n                </li>\n                <li>Desarrollar una red neuronal de aprendizaje.</li>\n              </ContainerOrderList>\n              <ContainerOrderList type='1' start='6' color='var(--color-green)'>\n                <li>\n                  Entender el funcionamiento de aprendizaje de dispositivos\n                  embebidos.\n                </li>\n                <li>\n                  Utilizar la plataforma Edge Impulse para Machine Learning.\n                </li>\n                <li>\n                  Aprender, mediante la experimentación científica sobre\n                  análisis de datos en dispositivos embebidos con múltiples\n                  sensores tales como: Giroscopio, Magnetómetro, Acelerómetro,\n                  colorimetría, temperatura, humedad y presión atmosférica.\n                </li>\n                <li>\n                  Programar dispositivos embebidos con Arduino IDE y Edge\n                  Impulse.\n                </li>\n              </ContainerOrderList>\n            </CardGrids>\n          </>\n        </BlueContainer>\n        <Container>\n          <img\n            src={samKit}\n            alt='sam & kit'\n            style={{ width: '100%', height: '500px', margin: '20px 0' }}\n          />\n        </Container>\n        <GradientContainer>\n          <CenterDiv>\n            <ContainerTitle color='white' size='2'>\n              Comunidad\n            </ContainerTitle>\n            <ContainerP style={{ textAlign: 'center' }}>\n              Nos gustaría saber en donde replicaste este curso, compartenos tu\n              experiencia junto a diferentes educadores de latinoamérica en el\n              Facebook oficial del curso. Puedes aportar con tus experiencias y\n              recomendaciones.\n            </ContainerP>\n            <CenterDiv direction='row'>\n              <RoundLink\n                href='https://www.facebook.com/groups/1709753269220853/?ref=share'\n                rel='noreferrer noopener'\n                target='_blank'\n                color={'var(--color-green)'}\n              >\n                UNETE\n              </RoundLink>\n              <RoundLink\n                href='https://github.com/ElectronicCats/inteligent_machines/issues'\n                rel='noreferrer noopener'\n                target='_blank'\n                color={'white'}\n                bgColor={'var(--color-green)'}\n              >\n                ISSUES\n              </RoundLink>\n            </CenterDiv>\n          </CenterDiv>\n        </GradientContainer>\n      </section>\n    </AppLayout>\n  );\n};\n","import React from 'react';\n\nexport const NotFound = () => {\n  return <h2>404</h2>;\n};\n","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport { GlobalStyle } from './styles/GlobalStyles';\nimport { FontStyles } from './styles/fonts/fontStyles';\nimport { useTheme } from './contexts/theme-context';\n\nimport { routes } from './pages/routes';\n\nexport const App = (props) => {\n  const { theme } = useTheme();\n  return (\n    <>\n      <FontStyles />\n      <GlobalStyle theme={theme} />\n      <Router>\n        <Switch>\n          {routes.map((route) => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact\n              component={route.component}\n            />\n          ))}\n        </Switch>\n      </Router>\n    </>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from './contexts/theme-context';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(\n  `%c ${process.env.REACT_APP_VERSION}`,\n  'font-size:10px; font-weight: bold; background:#00FF95; color:#0071b5;'\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}